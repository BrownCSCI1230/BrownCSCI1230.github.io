import{j as e}from"../../chunk-2eea0dad.js";import{I as t}from"../../chunk-32128d50.js";import{M as n}from"../../chunk-c90d34c1.js";const d={title:"Lab 10"};function o(r){const s=Object.assign({nav:"nav",ol:"ol",li:"li",a:"a",main:"main",h1:"h1",p:"p",div:"div",code:"code",h2:"h2",blockquote:"blockquote",strong:"strong",h3:"h3",ul:"ul",pre:"pre",span:"span",em:"em",h4:"h4","mjx-container":"mjx-container",svg:"svg",defs:"defs",path:"path",g:"g",use:"use",style:"style"},r.components);return e.exports.jsxs(e.exports.Fragment,{children:[e.exports.jsx(s.nav,{className:"toc",children:e.exports.jsx(s.ol,{className:"toc-level toc-level-1",children:e.exports.jsxs(s.li,{className:"toc-item toc-item-h1",children:[e.exports.jsx(s.a,{className:"toc-link toc-link-h1",href:"#lab-10-shaders",children:"Lab 10: Shaders"}),e.exports.jsxs(s.ol,{className:"toc-level toc-level-2",children:[e.exports.jsxs(s.li,{className:"toc-item toc-item-h2",children:[e.exports.jsx(s.a,{className:"toc-link toc-link-h2",href:"#introduction",children:"Introduction"}),e.exports.jsx(s.ol,{className:"toc-level toc-level-3",children:e.exports.jsx(s.li,{className:"toc-item toc-item-h3",children:e.exports.jsx(s.a,{className:"toc-link toc-link-h3",href:"#objectives",children:"Objectives"})})})]}),e.exports.jsxs(s.li,{className:"toc-item toc-item-h2",children:[e.exports.jsx(s.a,{className:"toc-link toc-link-h2",href:"#shaders-in-the-opengl-pipeline",children:"Shaders In The OpenGL Pipeline"}),e.exports.jsxs(s.ol,{className:"toc-level toc-level-3",children:[e.exports.jsx(s.li,{className:"toc-item toc-item-h3",children:e.exports.jsx(s.a,{className:"toc-link toc-link-h3",href:"#vertex-shaders",children:"Vertex Shaders"})}),e.exports.jsx(s.li,{className:"toc-item toc-item-h3",children:e.exports.jsx(s.a,{className:"toc-link toc-link-h3",href:"#fragment-shaders",children:"Fragment Shaders"})}),e.exports.jsx(s.li,{className:"toc-item toc-item-h3",children:e.exports.jsx(s.a,{className:"toc-link toc-link-h3",href:"#stencil-code",children:"Stencil Code"})}),e.exports.jsx(s.li,{className:"toc-item toc-item-h3",children:e.exports.jsx(s.a,{className:"toc-link toc-link-h3",href:"#glsl",children:"GLSL"})})]})]}),e.exports.jsxs(s.li,{className:"toc-item toc-item-h2",children:[e.exports.jsx(s.a,{className:"toc-link toc-link-h2",href:"#cpu-side-code",children:"CPU-Side Code"}),e.exports.jsxs(s.ol,{className:"toc-level toc-level-3",children:[e.exports.jsx(s.li,{className:"toc-item toc-item-h3",children:e.exports.jsx(s.a,{className:"toc-link toc-link-h3",href:"#loading-shaders",children:"Loading Shaders"})}),e.exports.jsx(s.li,{className:"toc-item toc-item-h3",children:e.exports.jsx(s.a,{className:"toc-link toc-link-h3",href:"#using-shader-programs",children:"Using Shader Programs"})}),e.exports.jsxs(s.li,{className:"toc-item toc-item-h3",children:[e.exports.jsx(s.a,{className:"toc-link toc-link-h3",href:"#shader-input-and-output",children:"Shader Input And Output"}),e.exports.jsxs(s.ol,{className:"toc-level toc-level-4",children:[e.exports.jsx(s.li,{className:"toc-item toc-item-h4",children:e.exports.jsx(s.a,{className:"toc-link toc-link-h4",href:"#vertex-attributes",children:"Vertex Attributes"})}),e.exports.jsx(s.li,{className:"toc-item toc-item-h4",children:e.exports.jsx(s.a,{className:"toc-link toc-link-h4",href:"#passing-data-from-vertex-to-fragment-shaders",children:"Passing Data From Vertex To Fragment Shaders"})}),e.exports.jsx(s.li,{className:"toc-item toc-item-h4",children:e.exports.jsx(s.a,{className:"toc-link toc-link-h4",href:"#uniforms",children:"Uniforms"})})]})]})]})]}),e.exports.jsxs(s.li,{className:"toc-item toc-item-h2",children:[e.exports.jsx(s.a,{className:"toc-link toc-link-h2",href:"#vertex-shaders-1",children:"Vertex Shaders"}),e.exports.jsxs(s.ol,{className:"toc-level toc-level-3",children:[e.exports.jsx(s.li,{className:"toc-item toc-item-h3",children:e.exports.jsx(s.a,{className:"toc-link toc-link-h3",href:"#transformations-in-a-vertex-shader",children:"Transformations In A Vertex Shader"})}),e.exports.jsx(s.li,{className:"toc-item toc-item-h3",children:e.exports.jsx(s.a,{className:"toc-link toc-link-h3",href:"#default-outputs",children:"Default Outputs"})})]})]}),e.exports.jsxs(s.li,{className:"toc-item toc-item-h2",children:[e.exports.jsx(s.a,{className:"toc-link toc-link-h2",href:"#fragment-shaders-1",children:"Fragment Shaders"}),e.exports.jsx(s.ol,{className:"toc-level toc-level-3",children:e.exports.jsx(s.li,{className:"toc-item toc-item-h3",children:e.exports.jsx(s.a,{className:"toc-link toc-link-h3",href:"#default-outputs-1",children:'"Default" Outputs'})})})]}),e.exports.jsxs(s.li,{className:"toc-item toc-item-h2",children:[e.exports.jsx(s.a,{className:"toc-link toc-link-h2",href:"#phong-illumination",children:"Phong Illumination"}),e.exports.jsxs(s.ol,{className:"toc-level toc-level-3",children:[e.exports.jsx(s.li,{className:"toc-item toc-item-h3",children:e.exports.jsx(s.a,{className:"toc-link toc-link-h3",href:"#ambient-lighting",children:"Ambient Lighting"})}),e.exports.jsx(s.li,{className:"toc-item toc-item-h3",children:e.exports.jsx(s.a,{className:"toc-link toc-link-h3",href:"#diffuse-lighting",children:"Diffuse Lighting"})}),e.exports.jsx(s.li,{className:"toc-item toc-item-h3",children:e.exports.jsx(s.a,{className:"toc-link toc-link-h3",href:"#specular-component",children:"Specular Component"})})]})]}),e.exports.jsx(s.li,{className:"toc-item toc-item-h2",children:e.exports.jsx(s.a,{className:"toc-link toc-link-h2",href:"#end",children:"End"})}),e.exports.jsx(s.li,{className:"toc-item toc-item-h2",children:e.exports.jsx(s.a,{className:"toc-link toc-link-h2",href:"#submission",children:"Submission"})})]})]})})}),e.exports.jsxs(s.main,{children:[`
`,`
`,e.exports.jsx(s.h1,{id:"lab-10-shaders",children:e.exports.jsx(s.a,{href:"#lab-10-shaders",children:"Lab 10: Shaders"})}),`
`,e.exports.jsx(s.p,{children:e.exports.jsx(s.a,{href:"https://classroom.github.com/a/fNrC0Swo",target:"_blank",rel:"noopener noreferrer",children:"Github Classroom assignment"})}),`
`,e.exports.jsx(s.div,{className:"task-no-number-callout callout",children:e.exports.jsxs(s.p,{children:["Please put your answers to written questions in this lab, if any, in a Markdown file named ",e.exports.jsx(s.code,{children:"README.md"})," in your lab repo."]})}),`
`,e.exports.jsx(s.h2,{id:"introduction",children:e.exports.jsx(s.a,{href:"#introduction",children:"Introduction"})}),`
`,e.exports.jsx(s.p,{children:"Welcome to the Shader Lab! In lab 9, you used VBOs and VAOs vertex data to the GPU in the form of vertex attributes. Now, it's time to learn how to use that data to actually render images. To do this, we'll be writing (and learning about) shaders:"}),`
`,e.exports.jsxs(s.blockquote,{children:[`
`,e.exports.jsxs(s.p,{children:["A ",e.exports.jsx(s.strong,{children:"shader"})," is just a program that gets run on the GPU."]}),`
`]}),`
`,e.exports.jsx(s.p,{children:"Shaders can be used to apply coordinate transformations, compute Phong lighting model, and even implement fancy post-processing effects. They are super powerful and general tools."}),`
`,e.exports.jsx(s.h3,{id:"objectives",children:e.exports.jsx(s.a,{href:"#objectives",children:"Objectives"})}),`
`,e.exports.jsxs(s.ol,{children:[`
`,e.exports.jsxs(s.li,{children:["Understand the differences between ",e.exports.jsx(s.strong,{children:"vertex"})," and ",e.exports.jsx(s.strong,{children:"fragment"})," shaders."]}),`
`,e.exports.jsx(s.li,{children:"Learn to pass inputs and outputs to and from shaders, and"}),`
`,e.exports.jsx(s.li,{children:"Write, compile and use your own Phong illumination shader using GLSL."}),`
`]}),`
`,e.exports.jsx(s.h2,{id:"shaders-in-the-opengl-pipeline",children:e.exports.jsx(s.a,{href:"#shaders-in-the-opengl-pipeline",children:"Shaders In The OpenGL Pipeline"})}),`
`,e.exports.jsx(t,{images:[{src:"/labs/lab11/pipeline.png",alt:"TODO"}],figNumber:1,targetWidth:"100%",figCaption:"The OpenGL pipeline. In this lab, we'll be working on the vertex and fragment shader stages."}),`
`,e.exports.jsxs(s.p,{children:["There are two types of shaders you will be writing for this lab: ",e.exports.jsx(s.strong,{children:"vertex"})," and ",e.exports.jsx(s.strong,{children:"fragment"})," shaders."]}),`
`,e.exports.jsxs("details",{children:[e.exports.jsx("summary",{children:"Extra: other types of shaders"}),e.exports.jsxs(s.p,{children:["OpenGL also supports ",e.exports.jsx(s.a,{href:"https://learnopengl.com/Advanced-OpenGL/Geometry-Shader",target:"_blank",rel:"noopener noreferrer",children:"geometry shaders"}),", ",e.exports.jsx(s.a,{href:"https://learnopengl.com/Guest-Articles/2021/Tessellation/Tessellation",target:"_blank",rel:"noopener noreferrer",children:"tessellation shaders"}),", and ",e.exports.jsx(s.a,{href:"https://antongerdelan.net/opengl/compute.html",target:"_blank",rel:"noopener noreferrer",children:"compute shaders"}),". You won't be required to use these for any of your work in this course, though you are welcome to explore them in your final project."]})]}),`
`,e.exports.jsx(s.h3,{id:"vertex-shaders",children:e.exports.jsx(s.a,{href:"#vertex-shaders",children:"Vertex Shaders"})}),`
`,e.exports.jsx(s.p,{children:"The vertex shader is the first shader run by the GPU. It acts directly on VBO/VAO data, so it's usually used to perform pre-processing transformations or other per-vertex computations."}),`
`,e.exports.jsx(s.h3,{id:"fragment-shaders",children:e.exports.jsx(s.a,{href:"#fragment-shaders",children:"Fragment Shaders"})}),`
`,e.exports.jsx(s.p,{children:"The fragment shader receives input from the vertex shader, and is specifically responsible for computing the final displayed color for every pixel in the image."}),`
`,e.exports.jsxs(s.blockquote,{children:[`
`,e.exports.jsxs(s.p,{children:["A ",e.exports.jsx(s.strong,{children:"fragment"})," is a pixel-sized piece of a triangle. The rasterization stage of the pipeline converts triangles into fragments."]}),`
`]}),`
`,e.exports.jsxs("details",{children:[e.exports.jsx("summary",{children:"Extra: on the definition of a fragment"}),e.exports.jsx(s.p,{children:`The definition we've provided above isn't the "whole truth", but it is sufficient for our purposes in CS 1230.`}),e.exports.jsx(s.p,{children:"There are subtle differences between actual pixels and fragments. For instance, a fragment may be smaller than one pixel, if OpenGL is configured to do multisampling (i.e. produce multiple samples per pixel)."}),e.exports.jsxs(s.p,{children:["If you're interested to find out more, the responses to this ",e.exports.jsx(s.a,{href:"https://stackoverflow.com/questions/31173002/what-is-the-difference-between-a-sample-a-pixel-and-a-fragment",target:"_blank",rel:"noopener noreferrer",children:"StackOverflow question"})," can be quite illuminating!"]})]}),`
`,e.exports.jsx(s.p,{children:`A fragment carries with it any attributes that were output from the Vertex Shader, interpolated from the vertices of the triangle that it came from.
These attributes could include positions, normals, texture coordinates, colors, etc.`}),`
`,e.exports.jsxs(s.p,{children:["Remember back in ",e.exports.jsx(s.a,{href:"/labs/lab6/#its-always-arrays",children:"Lab 6: Light"}),`, where you had a 2D array of intersection data and used that to produce a color?
The entries of that array were essentially fragments, and the code you wrote was a CPU-side fragment shader.`]}),`
`,e.exports.jsx(s.h3,{id:"stencil-code",children:e.exports.jsx(s.a,{href:"#stencil-code",children:"Stencil Code"})}),`
`,e.exports.jsx(s.p,{children:"In this lab, you will be working primarily within the following files:"}),`
`,e.exports.jsxs(s.ul,{children:[`
`,e.exports.jsxs(s.li,{children:[e.exports.jsx(s.code,{children:"glrenderer.cpp"}),": in particular, the function ",e.exports.jsx(s.code,{children:"initializeGL"})," which gets everything setup to render, and the function ",e.exports.jsx(s.code,{children:"paintGL"})," which is called every frame to perform the actual rendering."]}),`
`,e.exports.jsxs(s.li,{children:[e.exports.jsx(s.code,{children:"default.vert"}),": the raw source code of your vertex shader."]}),`
`,e.exports.jsxs(s.li,{children:[e.exports.jsx(s.code,{children:"default.frag"}),": the raw source code of your fragment shader."]}),`
`]}),`
`,e.exports.jsx(s.p,{children:"We have already included the following functionality for you:"}),`
`,e.exports.jsxs(s.ul,{children:[`
`,e.exports.jsxs(s.li,{children:[e.exports.jsx(s.code,{children:"generateSphereData"}),", which generates position and normal data for a sphere (as in ",e.exports.jsx(s.a,{href:"/labs/lab8",children:"Lab 8: Trimeshes"}),")."]}),`
`,e.exports.jsxs(s.li,{children:["VAO + VBO calls needed to load the data into the GPU (as in ",e.exports.jsx(s.a,{href:"/labs/lab9",children:"Lab 9: VBOs & VAOs"}),")."]}),`
`,e.exports.jsx(s.li,{children:"Setting up QT OpenGL context to draw in."}),`
`,e.exports.jsxs(s.li,{children:["A ",e.exports.jsx(s.code,{children:"shaderLoader"})," to read and compile the shader source files."]}),`
`,e.exports.jsx(s.li,{children:"Mouse interaction functionality to rotate your view."}),`
`]}),`
`,e.exports.jsx(s.h3,{id:"glsl",children:e.exports.jsx(s.a,{href:"#glsl",children:"GLSL"})}),`
`,e.exports.jsxs(s.p,{children:["We will use the OpenGL Shading Language (GLSL for short) to write shaders. GLSL has syntax very similar to C/C++. A GLSL ",e.exports.jsx(s.strong,{children:"program"})," is a collection of individual shaders (e.g. a vertex shader + a fragment shader) that instructs OpenGL how to draw geometry."]}),`
`,e.exports.jsx(s.p,{children:"Common GLSL data types include:"}),`
`,e.exports.jsxs(s.ul,{children:[`
`,e.exports.jsx(s.li,{children:e.exports.jsx(s.code,{children:"float, int, bool"})}),`
`,e.exports.jsx(s.li,{children:e.exports.jsx(s.code,{children:"vec2, vec3, vec4"})}),`
`,e.exports.jsx(s.li,{children:e.exports.jsx(s.code,{children:"mat2, mat3, mat4"})}),`
`]}),`
`,e.exports.jsx(s.p,{children:"Also supported are:"}),`
`,e.exports.jsxs(s.ul,{children:[`
`,e.exports.jsxs(s.li,{children:["arrays using ",e.exports.jsx(s.code,{children:"[]"})," syntax like C"]}),`
`,e.exports.jsx(s.li,{children:"structs"}),`
`]}),`
`,e.exports.jsx(s.p,{children:"GLSL includes a number of helpful predefined functions, including:"}),`
`,e.exports.jsxs(s.ul,{children:[`
`,e.exports.jsxs(s.li,{children:[e.exports.jsx(s.code,{children:"sin"}),", ",e.exports.jsx(s.code,{children:"cos"}),", ",e.exports.jsx(s.code,{children:"tan"}),", etc..."]}),`
`,e.exports.jsxs(s.li,{children:[e.exports.jsx(s.code,{children:"pow"}),", ",e.exports.jsx(s.code,{children:"exp"}),", ",e.exports.jsx(s.code,{children:"log"}),", etc..."]}),`
`,e.exports.jsxs(s.li,{children:[e.exports.jsx(s.code,{children:"cross"}),", ",e.exports.jsx(s.code,{children:"dot"}),", ",e.exports.jsx(s.code,{children:"inverse"}),", ",e.exports.jsx(s.code,{children:"transpose"})]}),`
`]}),`
`,e.exports.jsx(s.p,{children:"You can also write your own functions:"}),`
`,e.exports.jsx(s.pre,{children:e.exports.jsxs(s.code,{className:"code-highlight",children:[e.exports.jsx(s.span,{className:"code-line",children:`returnType functionName(argType argName, ... etc.) {
`}),e.exports.jsx(s.span,{className:"code-line",children:`  // Your code here
`}),e.exports.jsx(s.span,{className:"code-line",children:`}
`})]})}),`
`,e.exports.jsx(s.div,{className:"success-callout callout",children:e.exports.jsxs(s.p,{children:["Khronos provides an official ",e.exports.jsx(s.a,{href:"https://www.khronos.org/files/opengl45-quick-reference-card.pdf#page=9",target:"_blank",rel:"noopener noreferrer",children:'"quick reference card"'})," for GLSL. This is a dense(!) but complete listing of available types and functions in GLSL."]})}),`
`,e.exports.jsx(s.h2,{id:"cpu-side-code",children:e.exports.jsx(s.a,{href:"#cpu-side-code",children:"CPU-Side Code"})}),`
`,e.exports.jsx(s.h3,{id:"loading-shaders",children:e.exports.jsx(s.a,{href:"#loading-shaders",children:"Loading Shaders"})}),`
`,e.exports.jsxs(s.p,{children:["To start off, you're going to use ",e.exports.jsx(s.code,{children:"shaderloader.h"})," to load, compile, and link the vertex and fragment shader files."]}),`
`,e.exports.jsxs(s.p,{children:[`This process requires a fairly lengthly chunk of boilerplate code that does have much pedagogical value.
Thus, we have provided you with the `,e.exports.jsx(s.code,{children:"ShaderLoader"}),", which takes in the filepaths to the vertex and fragment shader (relative to the top-level project directory) and does all this compilation for you. The returned ",e.exports.jsx(s.code,{children:"programID"})," is used with other OpenGL functions to activate and deactivate the shader for drawing."]}),`
`,e.exports.jsxs(s.div,{className:"task-callout callout",children:[e.exports.jsxs(s.p,{children:["Call ",e.exports.jsx(s.code,{children:"ShaderLoader::createShaderProgram"})," in ",e.exports.jsx(s.code,{children:"initializeGL()"}),"and set ",e.exports.jsx(s.code,{children:"m_shader"}),` to the returned the value.
The input should the paths to shader files you will be writing (find those files in `,e.exports.jsx(s.code,{children:"resources/shader/"}),")."]}),e.exports.jsx(s.p,{children:"If you are using relative paths make sure to set the QT's working directory first."})]}),`
`,e.exports.jsx(s.h3,{id:"using-shader-programs",children:e.exports.jsx(s.a,{href:"#using-shader-programs",children:"Using Shader Programs"})}),`
`,e.exports.jsxs(s.p,{children:["Now that we have compiled the shader program, we can use ",e.exports.jsx(s.code,{children:"m_shader"})," to tell OpenGL we wish to use it for rendering."]}),`
`,e.exports.jsxs(s.p,{children:["In the same way you ",e.exports.jsx(s.em,{children:"bind"})," and ",e.exports.jsx(s.em,{children:"unbind"})," a vao, you need to ",e.exports.jsx(s.em,{children:"use"})," and ",e.exports.jsx(s.em,{children:"un-use"})," a shader program. This is done via the ",e.exports.jsx(s.code,{children:"glUseProgram"})," function."]}),`
`,e.exports.jsxs(s.blockquote,{children:[`
`,e.exports.jsx(s.p,{children:e.exports.jsx(s.strong,{children:"void glUseProgram(GLuint program);"})}),`
`,e.exports.jsxs(s.p,{children:[e.exports.jsxs(s.strong,{children:[e.exports.jsx(s.code,{children:"program"})," :"]})," the ID of the shader program you wish to draw with. Use 0 to unbind."]}),`
`]}),`
`,e.exports.jsx(s.div,{className:"task-callout callout",children:e.exports.jsxs(s.p,{children:["Call ",e.exports.jsx(s.code,{children:"glUseProgram()"})," with ",e.exports.jsx(s.code,{children:"m_shader"})," at the start of the render loop in ",e.exports.jsx(s.code,{children:"paintGL()"}),"."]})}),`
`,e.exports.jsx(s.div,{className:"task-callout callout",children:e.exports.jsxs(s.p,{children:["Call ",e.exports.jsx(s.code,{children:"glUseProgram()"})," with ",e.exports.jsx(s.code,{children:"0"})," at the end of the render loop in ",e.exports.jsx(s.code,{children:"paintGL()"}),"."]})}),`
`,e.exports.jsx(s.h3,{id:"shader-input-and-output",children:e.exports.jsx(s.a,{href:"#shader-input-and-output",children:"Shader Input And Output"})}),`
`,e.exports.jsx(s.p,{children:"There are multiple ways to make data available for use within a shader:"}),`
`,e.exports.jsx(s.h4,{id:"vertex-attributes",children:e.exports.jsx(s.a,{href:"#vertex-attributes",children:"Vertex Attributes"})}),`
`,e.exports.jsxs(s.p,{children:[`Vertex shaders can read in the data that is referred to by the VAO that is bound at the time of drawing.
To read in data from a VAO within a vertex shader, we need to declare an input variable above the `,e.exports.jsx(s.code,{children:"main"})," function:"]}),`
`,e.exports.jsxs(s.blockquote,{children:[`
`,e.exports.jsx(s.pre,{className:"language-c++",children:e.exports.jsx(s.code,{className:"language-c++ code-highlight",children:e.exports.jsxs(s.span,{className:"code-line",children:[e.exports.jsx(s.span,{className:"pl-en",children:"layout"}),`(location = [index]) in [data_type] [variable_name];
`]})})}),`
`,e.exports.jsxs(s.p,{children:[e.exports.jsx(s.strong,{children:"[data_type]  :"})," Can be any of the GLSL data types (",e.exports.jsx(s.code,{children:"float"}),", ",e.exports.jsx(s.code,{children:"vec3"}),", etc...) but should match the data specified in the VAO."]}),`
`,e.exports.jsxs(s.p,{children:[e.exports.jsx(s.strong,{children:"[variable_name]  :"})," The name this data is bound to within the shader."]}),`
`,e.exports.jsxs(s.p,{children:[e.exports.jsx(s.strong,{children:"[index]  :"})," The index is how you indicate which VAO attribute you would like to associate with this variable. Recall that when defining a VAO attribute, you used the functions ",e.exports.jsx(s.code,{children:"glVertexAttribPointer"})," and ",e.exports.jsx(s.code,{children:"glEnableVertexAttribArray"}),`, each of which had the first argument called "index." That's the index that we use here.`]}),`
`]}),`
`,e.exports.jsx(s.p,{children:"As an example:"}),`
`,e.exports.jsx(s.pre,{children:e.exports.jsx(s.code,{className:"code-highlight",children:e.exports.jsx(s.span,{className:"code-line",children:`layout(location = 0) in vec2 position2d;
`})})}),`
`,e.exports.jsxs(s.p,{children:["Here, we associate the VAO attribute with index 0 with the ",e.exports.jsx(s.code,{children:"position2d"})," variable in the shader."]}),`
`,e.exports.jsxs(s.div,{className:"task-callout callout",children:[e.exports.jsxs(s.p,{children:["Declare ",e.exports.jsx(s.code,{children:"vec3"}),"'s to hold ",e.exports.jsx(s.strong,{children:"object space"})," position and normal data from the VAO in the ",e.exports.jsx(s.code,{children:"default.vert"})," shader file."]}),e.exports.jsxs(s.p,{children:["To identify which attribute index corresponds to position versus normal, look at lines ~98-103 in ",e.exports.jsx(s.code,{children:"GLRenderer::initializeGL()"}),"."]})]}),`
`,e.exports.jsx(s.h4,{id:"passing-data-from-vertex-to-fragment-shaders",children:e.exports.jsx(s.a,{href:"#passing-data-from-vertex-to-fragment-shaders",children:"Passing Data From Vertex To Fragment Shaders"})}),`
`,e.exports.jsxs(s.p,{children:["In GLSL, we specify data flow between shaders by creating matching input and output variables for each shader. As such, if we wish to pass data from the vertex shader to the fragment shader, we must specify corresponding ",e.exports.jsx(s.strong,{children:"output variables for the vertex shader"})," and ",e.exports.jsx(s.strong,{children:"input variables for the fragment shader"}),"."]}),`
`,e.exports.jsx(s.pre,{children:e.exports.jsxs(s.code,{className:"code-highlight",children:[e.exports.jsx(s.span,{className:"code-line",children:`// Within the vertex shader
`}),e.exports.jsx(s.span,{className:"code-line",children:`out [data_type] [variable_name];
`})]})}),`
`,e.exports.jsx(s.pre,{children:e.exports.jsxs(s.code,{className:"code-highlight",children:[e.exports.jsx(s.span,{className:"code-line",children:`// Within the fragment shader
`}),e.exports.jsx(s.span,{className:"code-line",children:`in [data_type] [variable_name];
`})]})}),`
`,e.exports.jsx(s.div,{className:"warning-callout callout",children:e.exports.jsxs(s.p,{children:["In order for OpenGL to correctly link a pair of input and output variables, they ",e.exports.jsx(s.em,{children:"must"})," have the same ",e.exports.jsx(s.strong,{children:"variable name"})," and ",e.exports.jsx(s.strong,{children:"data type"}),"."]})}),`
`,e.exports.jsx(s.p,{children:"After the declaration of these variables in the shader, we can use them as we would any other variable in the shader."}),`
`,e.exports.jsxs(s.div,{className:"task-callout callout",children:[e.exports.jsxs(s.p,{children:["Declare a pair of ",e.exports.jsx(s.code,{children:"in/out"})," variables to pass the ",e.exports.jsx(s.strong,{children:"world space"})," position and normal data from the vertex shader to the fragment shader."]}),e.exports.jsx(s.p,{children:"These variables will be initialized later by transforming the object space position and normal by the model matrix."})]}),`
`,e.exports.jsxs("details",{children:[e.exports.jsx("summary",{children:"Note: on the interpolation of vertex data to fragment data"}),e.exports.jsx(s.p,{children:"You may wonder how there can be data passed from the vertex to the fragment shader when there are almost always more fragments than vertices."}),e.exports.jsx(s.p,{children:"Each fragment's input value is produced via barycentric interpolation of the output values from the three vertices of the triangle which contain that fragment."}),e.exports.jsx(s.p,{children:"For example, in the figure below (reproduced from Lab 9), the three vertices only have red, green, and blue colors defined on them; these values are interpolated to produce input colors for each fragment."}),e.exports.jsx(t,{images:[{src:"/labs/lab9/FinalTriangle.png",alt:"TODO"}],figNumber:2,targetWidth:"95%",figCaption:"Colorful Triangle"})]}),`
`,e.exports.jsx(s.h4,{id:"uniforms",children:e.exports.jsx(s.a,{href:"#uniforms",children:"Uniforms"})}),`
`,e.exports.jsxs(s.p,{children:["So far, we have learned about passing data that is unique to each vertex or fragment. What if we want to pass in a single piece of data that applies to all fragments/vertices? The answer is to use something called a ",e.exports.jsx(s.strong,{children:"uniform"})," variable. These can be declared in both vertex and fragment shaders using the following syntax:"]}),`
`,e.exports.jsx(s.pre,{children:e.exports.jsx(s.code,{className:"code-highlight",children:e.exports.jsx(s.span,{className:"code-line",children:`uniform [data_type] [variable_name];
`})})}),`
`,e.exports.jsxs(s.p,{children:[`We also need a way to initialize the variable in the GPU with data from the CPU.
For this purpose, OpenGL provides a set of functions that start with `,e.exports.jsx(s.code,{children:"glUniform_"}),`.
Depending on the data type, the function signature differs slightly. The generic format of the call is:`]}),`
`,e.exports.jsx(s.pre,{className:"language-cpp",children:e.exports.jsxs(s.code,{className:"language-cpp code-highlight",children:[e.exports.jsxs(s.span,{className:"code-line",children:[e.exports.jsx(s.span,{className:"pl-c",children:"// For scalar and vector data:"}),`
`]}),e.exports.jsxs(s.span,{className:"code-line",children:[e.exports.jsx(s.span,{className:"pl-en",children:"glUniform_______"}),`(GLuint location, [data to be passed]);
`]}),e.exports.jsx(s.span,{className:"code-line",children:`
`}),e.exports.jsxs(s.span,{className:"code-line",children:[e.exports.jsx(s.span,{className:"pl-c",children:"// For matrices, we use a different syntax:"}),`
`]}),e.exports.jsxs(s.span,{className:"code-line",children:[e.exports.jsx(s.span,{className:"pl-en",children:"glUniformMatrix_______"}),`(GLuint location, [data to be passed]);
`]})]})}),`
`,e.exports.jsxs(s.blockquote,{children:[`
`,e.exports.jsxs(s.p,{children:["Note: the underscores stand in for the size and type of the data (e.g. ",e.exports.jsx(s.code,{children:"glUniform3f()"}),"). For a full list of calls for various types, refer to this ",e.exports.jsx(s.a,{href:"https://registry.khronos.org/OpenGL-Refpages/gl4/html/glUniform.xhtml",target:"_blank",rel:"noopener noreferrer",children:"reference page"}),"."]}),`
`]}),`
`,e.exports.jsxs(s.p,{children:["The first argument to this function is the ",e.exports.jsx(s.em,{children:"location"}),` of the uniform within the OpenGL state machine.
To get this value for a given shader uniform variable, we can use the function `,e.exports.jsx(s.code,{children:"glGetUniformLocation"}),"."]}),`
`,e.exports.jsxs(s.blockquote,{children:[`
`,e.exports.jsx(s.p,{children:e.exports.jsx(s.strong,{children:"GLint glGetUniformLocation(GLuint program, const GLchar *name);"})}),`
`,e.exports.jsxs(s.p,{children:[e.exports.jsxs(s.strong,{children:[e.exports.jsx(s.code,{children:"program"})," :"]})," the unique shader program ID. You've already obtained this from the ",e.exports.jsx(s.code,{children:"ShaderLoader"}),"."]}),`
`,e.exports.jsxs(s.p,{children:[e.exports.jsxs(s.strong,{children:[e.exports.jsx(s.code,{children:"name"})," :"]})," the name of the variable in the shader source code. For example: if you have a uniform called ",e.exports.jsx(s.code,{children:"color"})," declared in the fragment shader, you would use the string ",e.exports.jsx(s.code,{children:'"color"'})," for this argument."]}),`
`,e.exports.jsxs(s.p,{children:["The returned value is ",e.exports.jsx(s.code,{children:"-1"})," if the specified name cannot be found. Otherwise, we can pass the output GLint directly into ",e.exports.jsx(s.code,{children:"glUniform_"})," as the location parameter."]}),`
`]}),`
`,e.exports.jsx(s.div,{className:"task-callout callout",children:e.exports.jsxs(s.p,{children:["Declare a ",e.exports.jsx(s.code,{children:"uniform mat4"})," variable in the vertex shader to store the model matrix. Then, in ",e.exports.jsx(s.code,{children:"paintGL"})," pass in ",e.exports.jsx(s.code,{children:"m_model"}),", a member variable storing the model matrix."]})}),`
`,e.exports.jsxs("details",{children:[e.exports.jsx("summary",{children:"More info on passing matrices as uniforms"}),e.exports.jsx(s.p,{children:"This is the function you'll use most often to pass a matrix to the GPU as a uniform variable:"}),e.exports.jsx(s.p,{children:e.exports.jsx(s.code,{children:"glUniformMatrix4fv(GLint location,GLsizei count,GLboolean transpose,const GLfloat *value);"})}),e.exports.jsxs(s.p,{children:["What does the ",e.exports.jsx(s.code,{children:"4fv"})," suffix mean?"]}),e.exports.jsxs(s.ul,{children:[`
`,e.exports.jsxs(s.li,{children:[e.exports.jsx(s.code,{children:"4"})," indicates that the matrix is 4x4"]}),`
`,e.exports.jsxs(s.li,{children:[e.exports.jsx(s.code,{children:"f"})," indicates that the data type is ",e.exports.jsx(s.code,{children:"float"})]}),`
`,e.exports.jsxs(s.li,{children:[e.exports.jsx(s.code,{children:"v"})," indicates that the data is a vector (i.e. an array) of matrices. For some reason, there is no ",e.exports.jsx(s.code,{children:"glUniformMatrix4f"})," function that passes just a single matrix."]}),`
`]}),e.exports.jsxs(s.p,{children:["This function takes a few more arguments than the ",e.exports.jsx(s.code,{children:"glUniform_"})," functions we've seen so far:"]}),e.exports.jsxs(s.ul,{children:[`
`,e.exports.jsxs(s.li,{children:[e.exports.jsx(s.code,{children:"GLsizei count"}),": the number of matrices being passed in. You'll almost almost use ",e.exports.jsx(s.code,{children:"1"})," here, unless you have reason to pass an array of matrices to your shaders."]}),`
`,e.exports.jsxs(s.li,{children:[e.exports.jsx(s.code,{children:"GLboolean transpose"}),": whether or not to transpose the matrix before passing it in. Perhaps contrary to your expectations, OpenGL expects the matrix to be in column major order. Luckily, glm already internally stores its matrices in this format. So when we're passing in a glm matrix, we can use ",e.exports.jsx(s.code,{children:"GL_FALSE"})," here."]}),`
`,e.exports.jsxs(s.li,{children:[e.exports.jsx(s.code,{children:"const GLfloat *value"}),": a pointer to the first element of the matrix you wish to send. For example: if you have a ",e.exports.jsx(s.code,{children:"glm::mat4"})," called ",e.exports.jsx(s.code,{children:"matrix"}),", you can get this pointer via ",e.exports.jsx(s.code,{children:"&matrix[0][0]"}),"."]}),`
`]}),e.exports.jsxs(s.p,{children:["Putting this all together: if we wanted to pass in a rotation matrix called ",e.exports.jsx(s.code,{children:"rotation"}),":"]}),e.exports.jsx(s.pre,{children:e.exports.jsx(s.code,{className:"code-highlight",children:e.exports.jsx(s.span,{className:"code-line",children:`glUniformMatrix4fv(mat_loc, 1, GL_FALSE, &rotation[0][0]);
`})})})]}),`
`,e.exports.jsx(s.h2,{id:"vertex-shaders-1",children:e.exports.jsx(s.a,{href:"#vertex-shaders-1",children:"Vertex Shaders"})}),`
`,e.exports.jsx(s.p,{children:`As we discussed earlier, a vertex shader is a program that runs on the GPU which operates on each vertex of the VAO it is processing.
In the code you'll be writing in this lab (and later projects), you'll use the vertex shader to apply transformations to vertices.`}),`
`,e.exports.jsx(s.h3,{id:"transformations-in-a-vertex-shader",children:e.exports.jsx(s.a,{href:"#transformations-in-a-vertex-shader",children:"Transformations In A Vertex Shader"})}),`
`,e.exports.jsx(s.p,{children:`We need three matrices to define the full transformation a vertex undergoes: Model, View, and Projection.
In the Parsing lab, you calculated model matrices for each shape and a view matrix for the camera based on its position, look, and up vectors.
In lecture, you have seen how a projection matrix can be calculated to morph a view frustum into a canonical view cuboid.`}),`
`,e.exports.jsx(t,{images:[{src:"/labs/lab10/corrdinate_space_diagram.png",alt:"TODO"}],figNumber:3,targetWidth:"75%",figCaption:"Coordinate spaces and their conversion matrices"}),`
`,e.exports.jsxs(s.p,{children:["The matrices should be applied in the following order: model first, then view, and last projection (remember the notes on matrix order of application) to fully convert from ",e.exports.jsx(s.em,{children:"object"})," to ",e.exports.jsx(s.em,{children:"clip"})," space"]}),`
`,e.exports.jsx(s.div,{className:"task-callout callout",children:e.exports.jsxs(s.p,{children:["Using the same method as for ",e.exports.jsx(s.code,{children:"m_model"}),", pass in ",e.exports.jsx(s.code,{children:"m_view"})," and ",e.exports.jsx(s.code,{children:"m_proj"})," into the vertex shader as uniforms."]})}),`
`,e.exports.jsxs(s.div,{className:"task-callout callout",children:[e.exports.jsxs(s.p,{children:["Within the vertex shader, use the model and view matrices to transform the object space ",e.exports.jsx(s.code,{children:"position"})," and ",e.exports.jsx(s.code,{children:"normal"})," data you defined earlier (using ",e.exports.jsx(s.code,{children:"layout"}),") to ",e.exports.jsx(s.strong,{children:"world space"}),". Using the result of the transformation, set the variables for the world space ",e.exports.jsx(s.code,{children:"position"})," and ",e.exports.jsx(s.code,{children:"normal"})," you declared earlier using the ",e.exports.jsx(s.code,{children:"in"}),"/",e.exports.jsx(s.code,{children:"out"})," keywords."]}),e.exports.jsxs(s.p,{children:["Remeber from ",e.exports.jsx(s.a,{href:"https://docs.google.com/presentation/d/1WtW-3uwEzY2KMrfQSLuCXY-6GUFZ-zK2/edit#slide=id.p77",target:"_blank",rel:"noopener noreferrer",children:"this lecture"})," that when you transform normals they have certain special rules. Also, consider the performance implications of computing a matrix inverse for every vertex--How can you avoid computing this every time?"]})]}),`
`,e.exports.jsx(s.h3,{id:"default-outputs",children:e.exports.jsx(s.a,{href:"#default-outputs",children:"Default Outputs"})}),`
`,e.exports.jsxs(s.p,{children:['There is one type of shader output we have not discussed yet: the "predefined outputs." These are always implicitly defined by OpenGL. In this case, we only care about ',e.exports.jsx(s.code,{children:"gl_Position"}),"; you can read about the others ",e.exports.jsx(s.a,{href:"https://www.khronos.org/opengl/wiki/Vertex_Shader#Outputs",target:"_blank",rel:"noopener noreferrer",children:"here"}),"."]}),`
`,e.exports.jsxs(s.p,{children:[e.exports.jsx(s.code,{children:"gl_Position"})," is a ",e.exports.jsx(s.code,{children:"vec4"})," that represents the vertex's output position in ",e.exports.jsx(s.strong,{children:"clip-space"}),". This is what OpenGL uses to actually place the vertex in the image when rendering."]}),`
`,e.exports.jsx(s.div,{className:"task-callout callout",children:e.exports.jsxs(s.p,{children:["Set ",e.exports.jsx(s.code,{children:"gl_Position"})," to the result of applying the MVP (model, view, projection) transformation to the input object space vertex position."]})}),`
`,e.exports.jsx(s.h2,{id:"fragment-shaders-1",children:e.exports.jsx(s.a,{href:"#fragment-shaders-1",children:"Fragment Shaders"})}),`
`,e.exports.jsxs(s.p,{children:["The fragment shader runs after the rasterization step of the pipeline, where each triangle has been converted into a set of ",e.exports.jsx(s.strong,{children:"fragments"})," for each pixel that the triangle covers. The fragment shader computes the color of a fragment, given the interpolated inputs passed from the vertex shader."]}),`
`,e.exports.jsx(s.h3,{id:"default-outputs-1",children:e.exports.jsx(s.a,{href:"#default-outputs-1",children:'"Default" Outputs'})}),`
`,e.exports.jsxs(s.p,{children:["You might expect that just like vertex shaders have a default output called ",e.exports.jsx(s.code,{children:"gl_Position"}),", fragment shaders would have a similar default output. They used to, but this has been deprecated; now, all fragment shader outputs are specified explicitly with ",e.exports.jsx(s.code,{children:"out"})," variable declarations."]}),`
`,e.exports.jsxs(s.p,{children:["For the purposes of this lab (and most of the code you'll write in this course), this means you need to declare an ",e.exports.jsx(s.code,{children:"out vec4"})," variable and assign to it in the fragment shader's ",e.exports.jsx(s.code,{children:"main"})," function. This output is then detected by OpenGL and is assumed to be the final output pixel color. This variable name does have the restriction of not being allowed to begin with ",e.exports.jsx(s.code,{children:"gl_"})," however, so be careful!"]}),`
`,e.exports.jsxs("details",{children:[e.exports.jsx("summary",{children:"Extra: more on fragment shader outputs"}),e.exports.jsxs(s.p,{children:['When we said "this output is then detected by OpenGL and is assumed to be the final output pixel color," we swept quite a bit under the rug. OpenGL can actually be configured to render images with many different output channels, each of which might be associated with a different fragment shader output. You can read more about the details behind fragment shader outputs here: ',e.exports.jsx(s.a,{href:"https://www.khronos.org/opengl/wiki/Fragment_Shader#Outputs",target:"_blank",rel:"noopener noreferrer",children:"https://www.khronos.org/opengl/wiki/Fragment_Shader#Outputs"})]})]}),`
`,e.exports.jsx(s.div,{className:"task-callout callout",children:e.exports.jsxs(s.p,{children:["Manually add a ",e.exports.jsx(s.code,{children:"vec4"})," named ",e.exports.jsx(s.code,{children:"fragColor"})," as an output to your fragment shader. For now, set it to ",e.exports.jsx(s.code,{children:"vec4(1.0)"})," in the fragment shader's ",e.exports.jsx(s.code,{children:"main()"})," function."]})}),`
`,e.exports.jsx(t,{images:[{src:"/labs/lab10/MinimumFunctionalUnit.png",alt:"TODO"}],figNumber:4,targetWidth:"75%",figCaption:"The white circle of minimum functionality"}),`
`,e.exports.jsx(s.p,{children:"You should now see a white circle like the one above when you run your code (if you don't, it's time to debug)."}),`
`,e.exports.jsxs(s.div,{className:"task-callout callout",children:[e.exports.jsx(s.p,{children:"To verify your normals are correct, use the absolute value of your normal input variable's x, y and z components as the r, g, and b components of your fragment shader output."}),e.exports.jsxs(s.p,{children:["After you verify their correctness, set the frag color to black (i.e. ",e.exports.jsx(s.code,{children:"vec4(vec3(0.0),1.0)"}),") to get ready for the next part of the lab."]})]}),`
`,e.exports.jsxs(s.p,{children:["As a hint, the following pattern is allowed in GLSL: ",e.exports.jsx(s.code,{children:"varVec4 = vec4(abs(varVec3), 1.0)"})]}),`
`,e.exports.jsx(t,{images:[{src:"/labs/lab10/NormalExample.png",alt:"TODO"}],figNumber:5,targetWidth:"75%",figCaption:"The output you should see if your normals are correct"}),`
`,e.exports.jsx(s.h2,{id:"phong-illumination",children:e.exports.jsx(s.a,{href:"#phong-illumination",children:"Phong Illumination"})}),`
`,e.exports.jsx(t,{images:[{src:"/labs/lab10/PhongModel.png",alt:"TODO"}],figNumber:6,targetWidth:"100%",figCaption:"Phong Model Components: Ambient, Diffuse, Specular"}),`
`,e.exports.jsx(s.p,{children:`Now that we have gone over the basics of vertex and fragment shaders, let's implement a basic version of the Phong illumination model. This section consists of a set of tasks which you will need to complete using the previous information in the lab. Make sure to reference it if you get stuck. You can think of the lab up to now as a "tutorial." From here on out you are being asked to apply what you learned in a less guided environment.`}),`
`,e.exports.jsx(s.p,{children:"Here is the lighting equation we'll be using in this lab:"}),`
`,e.exports.jsx(s.div,{className:"math math-display",children:e.exports.jsx(s["mjx-container"],{className:"MathJax",jax:"SVG",display:"true",children:e.exports.jsxs(s.svg,{style:{verticalAlign:"-0.566ex"},xmlns:"http://www.w3.org/2000/svg",width:"50.79ex",height:"2.593ex",role:"img",focusable:"false",viewBox:"0 -896 22449.1 1146",xmlnsXlink:"http://www.w3.org/1999/xlink",children:[e.exports.jsxs(s.defs,{children:[e.exports.jsx(s.path,{id:"MJX-1-TEX-N-70",d:"M36 -148H50Q89 -148 97 -134V-126Q97 -119 97 -107T97 -77T98 -38T98 6T98 55T98 106Q98 140 98 177T98 243T98 296T97 335T97 351Q94 370 83 376T38 385H20V408Q20 431 22 431L32 432Q42 433 61 434T98 436Q115 437 135 438T165 441T176 442H179V416L180 390L188 397Q247 441 326 441Q407 441 464 377T522 216Q522 115 457 52T310 -11Q242 -11 190 33L182 40V-45V-101Q182 -128 184 -134T195 -145Q216 -148 244 -148H260V-194H252L228 -193Q205 -192 178 -192T140 -191Q37 -191 28 -194H20V-148H36ZM424 218Q424 292 390 347T305 402Q234 402 182 337V98Q222 26 294 26Q345 26 384 80T424 218Z"}),e.exports.jsx(s.path,{id:"MJX-1-TEX-N-68",d:"M41 46H55Q94 46 102 60V68Q102 77 102 91T102 124T102 167T103 217T103 272T103 329Q103 366 103 407T103 482T102 542T102 586T102 603Q99 622 88 628T43 637H25V660Q25 683 27 683L37 684Q47 685 66 686T103 688Q120 689 140 690T170 693T181 694H184V367Q244 442 328 442Q451 442 463 329Q464 322 464 190V104Q464 66 466 59T477 49Q498 46 526 46H542V0H534L510 1Q487 2 460 2T422 3Q319 3 310 0H302V46H318Q379 46 379 62Q380 64 380 200Q379 335 378 343Q372 371 358 385T334 402T308 404Q263 404 229 370Q202 343 195 315T187 232V168V108Q187 78 188 68T191 55T200 49Q221 46 249 46H265V0H257L234 1Q210 2 183 2T145 3Q42 3 33 0H25V46H41Z"}),e.exports.jsx(s.path,{id:"MJX-1-TEX-N-6F",d:"M28 214Q28 309 93 378T250 448Q340 448 405 380T471 215Q471 120 407 55T250 -10Q153 -10 91 57T28 214ZM250 30Q372 30 372 193V225V250Q372 272 371 288T364 326T348 362T317 390T268 410Q263 411 252 411Q222 411 195 399Q152 377 139 338T126 246V226Q126 130 145 91Q177 30 250 30Z"}),e.exports.jsx(s.path,{id:"MJX-1-TEX-N-6E",d:"M41 46H55Q94 46 102 60V68Q102 77 102 91T102 122T103 161T103 203Q103 234 103 269T102 328V351Q99 370 88 376T43 385H25V408Q25 431 27 431L37 432Q47 433 65 434T102 436Q119 437 138 438T167 441T178 442H181V402Q181 364 182 364T187 369T199 384T218 402T247 421T285 437Q305 442 336 442Q450 438 463 329Q464 322 464 190V104Q464 66 466 59T477 49Q498 46 526 46H542V0H534L510 1Q487 2 460 2T422 3Q319 3 310 0H302V46H318Q379 46 379 62Q380 64 380 200Q379 335 378 343Q372 371 358 385T334 402T308 404Q263 404 229 370Q202 343 195 315T187 232V168V108Q187 78 188 68T191 55T200 49Q221 46 249 46H265V0H257L234 1Q210 2 183 2T145 3Q42 3 33 0H25V46H41Z"}),e.exports.jsx(s.path,{id:"MJX-1-TEX-N-67",d:"M329 409Q373 453 429 453Q459 453 472 434T485 396Q485 382 476 371T449 360Q416 360 412 390Q410 404 415 411Q415 412 416 414V415Q388 412 363 393Q355 388 355 386Q355 385 359 381T368 369T379 351T388 325T392 292Q392 230 343 187T222 143Q172 143 123 171Q112 153 112 133Q112 98 138 81Q147 75 155 75T227 73Q311 72 335 67Q396 58 431 26Q470 -13 470 -72Q470 -139 392 -175Q332 -206 250 -206Q167 -206 107 -175Q29 -140 29 -75Q29 -39 50 -15T92 18L103 24Q67 55 67 108Q67 155 96 193Q52 237 52 292Q52 355 102 398T223 442Q274 442 318 416L329 409ZM299 343Q294 371 273 387T221 404Q192 404 171 388T145 343Q142 326 142 292Q142 248 149 227T179 192Q196 182 222 182Q244 182 260 189T283 207T294 227T299 242Q302 258 302 292T299 343ZM403 -75Q403 -50 389 -34T348 -11T299 -2T245 0H218Q151 0 138 -6Q118 -15 107 -34T95 -74Q95 -84 101 -97T122 -127T170 -155T250 -167Q319 -167 361 -139T403 -75Z"}),e.exports.jsx(s.path,{id:"MJX-1-TEX-N-49",d:"M328 0Q307 3 180 3T32 0H21V46H43Q92 46 106 49T126 60Q128 63 128 342Q128 620 126 623Q122 628 118 630T96 635T43 637H21V683H32Q53 680 180 680T328 683H339V637H317Q268 637 254 634T234 623Q232 620 232 342Q232 63 234 60Q238 55 242 53T264 48T317 46H339V0H328Z"}),e.exports.jsx(s.path,{id:"MJX-1-TEX-N-74",d:"M27 422Q80 426 109 478T141 600V615H181V431H316V385H181V241Q182 116 182 100T189 68Q203 29 238 29Q282 29 292 100Q293 108 293 146V181H333V146V134Q333 57 291 17Q264 -10 221 -10Q187 -10 162 2T124 33T105 68T98 100Q97 107 97 248V385H18V422H27Z"}),e.exports.jsx(s.path,{id:"MJX-1-TEX-N-65",d:"M28 218Q28 273 48 318T98 391T163 433T229 448Q282 448 320 430T378 380T406 316T415 245Q415 238 408 231H126V216Q126 68 226 36Q246 30 270 30Q312 30 342 62Q359 79 369 104L379 128Q382 131 395 131H398Q415 131 415 121Q415 117 412 108Q393 53 349 21T250 -11Q155 -11 92 58T28 218ZM333 275Q322 403 238 411H236Q228 411 220 410T195 402T166 381T143 340T127 274V267H333V275Z"}),e.exports.jsx(s.path,{id:"MJX-1-TEX-N-73",d:"M295 316Q295 356 268 385T190 414Q154 414 128 401Q98 382 98 349Q97 344 98 336T114 312T157 287Q175 282 201 278T245 269T277 256Q294 248 310 236T342 195T359 133Q359 71 321 31T198 -10H190Q138 -10 94 26L86 19L77 10Q71 4 65 -1L54 -11H46H42Q39 -11 33 -5V74V132Q33 153 35 157T45 162H54Q66 162 70 158T75 146T82 119T101 77Q136 26 198 26Q295 26 295 104Q295 133 277 151Q257 175 194 187T111 210Q75 227 54 256T33 318Q33 357 50 384T93 424T143 442T187 447H198Q238 447 268 432L283 424L292 431Q302 440 314 448H322H326Q329 448 335 442V310L329 304H301Q295 310 295 316Z"}),e.exports.jsx(s.path,{id:"MJX-1-TEX-N-69",d:"M69 609Q69 637 87 653T131 669Q154 667 171 652T188 609Q188 579 171 564T129 549Q104 549 87 564T69 609ZM247 0Q232 3 143 3Q132 3 106 3T56 1L34 0H26V46H42Q70 46 91 49Q100 53 102 60T104 102V205V293Q104 345 102 359T88 378Q74 385 41 385H30V408Q30 431 32 431L42 432Q52 433 70 434T106 436Q123 437 142 438T171 441T182 442H185V62Q190 52 197 50T232 46H255V0H247Z"}),e.exports.jsx(s.path,{id:"MJX-1-TEX-N-79",d:"M69 -66Q91 -66 104 -80T118 -116Q118 -134 109 -145T91 -160Q84 -163 97 -166Q104 -168 111 -168Q131 -168 148 -159T175 -138T197 -106T213 -75T225 -43L242 0L170 183Q150 233 125 297Q101 358 96 368T80 381Q79 382 78 382Q66 385 34 385H19V431H26L46 430Q65 430 88 429T122 428Q129 428 142 428T171 429T200 430T224 430L233 431H241V385H232Q183 385 185 366L286 112Q286 113 332 227L376 341V350Q376 365 366 373T348 383T334 385H331V431H337H344Q351 431 361 431T382 430T405 429T422 429Q477 429 503 431H508V385H497Q441 380 422 345Q420 343 378 235T289 9T227 -131Q180 -204 113 -204Q69 -204 44 -177T19 -116Q19 -89 35 -78T69 -66Z"}),e.exports.jsx(s.path,{id:"MJX-1-TEX-N-3D",d:"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"}),e.exports.jsx(s.path,{id:"MJX-1-TEX-N-28",d:"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"}),e.exports.jsx(s.path,{id:"MJX-1-TEX-I-1D43E",d:"M285 628Q285 635 228 637Q205 637 198 638T191 647Q191 649 193 661Q199 681 203 682Q205 683 214 683H219Q260 681 355 681Q389 681 418 681T463 682T483 682Q500 682 500 674Q500 669 497 660Q496 658 496 654T495 648T493 644T490 641T486 639T479 638T470 637T456 637Q416 636 405 634T387 623L306 305Q307 305 490 449T678 597Q692 611 692 620Q692 635 667 637Q651 637 651 648Q651 650 654 662T659 677Q662 682 676 682Q680 682 711 681T791 680Q814 680 839 681T869 682Q889 682 889 672Q889 650 881 642Q878 637 862 637Q787 632 726 586Q710 576 656 534T556 455L509 418L518 396Q527 374 546 329T581 244Q656 67 661 61Q663 59 666 57Q680 47 717 46H738Q744 38 744 37T741 19Q737 6 731 0H720Q680 3 625 3Q503 3 488 0H478Q472 6 472 9T474 27Q478 40 480 43T491 46H494Q544 46 544 71Q544 75 517 141T485 216L427 354L359 301L291 248L268 155Q245 63 245 58Q245 51 253 49T303 46H334Q340 37 340 35Q340 19 333 5Q328 0 317 0Q314 0 280 1T180 2Q118 2 85 2T49 1Q31 1 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Z"}),e.exports.jsx(s.path,{id:"MJX-1-TEX-I-1D44E",d:"M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"}),e.exports.jsx(s.path,{id:"MJX-1-TEX-N-2B",d:"M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"}),e.exports.jsx(s.path,{id:"MJX-1-TEX-I-1D451",d:"M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"}),e.exports.jsx(s.path,{id:"MJX-1-TEX-N-2217",d:"M229 286Q216 420 216 436Q216 454 240 464Q241 464 245 464T251 465Q263 464 273 456T283 436Q283 419 277 356T270 286L328 328Q384 369 389 372T399 375Q412 375 423 365T435 338Q435 325 425 315Q420 312 357 282T289 250L355 219L425 184Q434 175 434 161Q434 146 425 136T401 125Q393 125 383 131T328 171L270 213Q283 79 283 63Q283 53 276 44T250 35Q231 35 224 44T216 63Q216 80 222 143T229 213L171 171Q115 130 110 127Q106 124 100 124Q87 124 76 134T64 161Q64 166 64 169T67 175T72 181T81 188T94 195T113 204T138 215T170 230T210 250L74 315Q65 324 65 338Q65 353 74 363T98 374Q106 374 116 368T171 328L229 286Z"}),e.exports.jsx(s.path,{id:"MJX-1-TEX-I-1D45B",d:"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"}),e.exports.jsx(s.path,{id:"MJX-1-TEX-N-B7",d:"M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250Z"}),e.exports.jsx(s.path,{id:"MJX-1-TEX-I-1D43F",d:"M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 217 683Q271 680 344 680Q485 680 506 683H518Q524 677 524 674T522 656Q517 641 513 637H475Q406 636 394 628Q387 624 380 600T313 336Q297 271 279 198T252 88L243 52Q243 48 252 48T311 46H328Q360 46 379 47T428 54T478 72T522 106T564 161Q580 191 594 228T611 270Q616 273 628 273H641Q647 264 647 262T627 203T583 83T557 9Q555 4 553 3T537 0T494 -1Q483 -1 418 -1T294 0H116Q32 0 32 10Q32 17 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z"}),e.exports.jsx(s.path,{id:"MJX-1-TEX-N-29",d:"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"}),e.exports.jsx(s.path,{id:"MJX-1-TEX-I-1D460",d:"M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"}),e.exports.jsx(s.path,{id:"MJX-1-TEX-I-1D445",d:"M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z"}),e.exports.jsx(s.path,{id:"MJX-1-TEX-N-22C5",d:"M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250Z"}),e.exports.jsx(s.path,{id:"MJX-1-TEX-I-1D438",d:"M492 213Q472 213 472 226Q472 230 477 250T482 285Q482 316 461 323T364 330H312Q311 328 277 192T243 52Q243 48 254 48T334 46Q428 46 458 48T518 61Q567 77 599 117T670 248Q680 270 683 272Q690 274 698 274Q718 274 718 261Q613 7 608 2Q605 0 322 0H133Q31 0 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H757Q764 676 764 669Q764 664 751 557T737 447Q735 440 717 440H705Q698 445 698 453L701 476Q704 500 704 528Q704 558 697 578T678 609T643 625T596 632T532 634H485Q397 633 392 631Q388 629 386 622Q385 619 355 499T324 377Q347 376 372 376H398Q464 376 489 391T534 472Q538 488 540 490T557 493Q562 493 565 493T570 492T572 491T574 487T577 483L544 351Q511 218 508 216Q505 213 492 213Z"}),e.exports.jsx(s.path,{id:"MJX-1-TEX-I-1D441",d:"M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z"})]}),e.exports.jsx(s.g,{stroke:"currentColor",fill:"currentColor",strokeWidth:"0",transform:"scale(1,-1)",children:e.exports.jsxs(s.g,{"data-mml-node":"math",children:[e.exports.jsxs(s.g,{"data-mml-node":"mtext",children:[e.exports.jsx(s.use,{"data-c":"70",xlinkHref:"#MJX-1-TEX-N-70"}),e.exports.jsx(s.use,{"data-c":"68",xlinkHref:"#MJX-1-TEX-N-68",transform:"translate(556,0)"}),e.exports.jsx(s.use,{"data-c":"6F",xlinkHref:"#MJX-1-TEX-N-6F",transform:"translate(1112,0)"}),e.exports.jsx(s.use,{"data-c":"6E",xlinkHref:"#MJX-1-TEX-N-6E",transform:"translate(1612,0)"}),e.exports.jsx(s.use,{"data-c":"67",xlinkHref:"#MJX-1-TEX-N-67",transform:"translate(2168,0)"}),e.exports.jsx(s.use,{"data-c":"49",xlinkHref:"#MJX-1-TEX-N-49",transform:"translate(2668,0)"}),e.exports.jsx(s.use,{"data-c":"6E",xlinkHref:"#MJX-1-TEX-N-6E",transform:"translate(3029,0)"}),e.exports.jsx(s.use,{"data-c":"74",xlinkHref:"#MJX-1-TEX-N-74",transform:"translate(3585,0)"}),e.exports.jsx(s.use,{"data-c":"65",xlinkHref:"#MJX-1-TEX-N-65",transform:"translate(3974,0)"}),e.exports.jsx(s.use,{"data-c":"6E",xlinkHref:"#MJX-1-TEX-N-6E",transform:"translate(4418,0)"}),e.exports.jsx(s.use,{"data-c":"73",xlinkHref:"#MJX-1-TEX-N-73",transform:"translate(4974,0)"}),e.exports.jsx(s.use,{"data-c":"69",xlinkHref:"#MJX-1-TEX-N-69",transform:"translate(5368,0)"}),e.exports.jsx(s.use,{"data-c":"74",xlinkHref:"#MJX-1-TEX-N-74",transform:"translate(5646,0)"}),e.exports.jsx(s.use,{"data-c":"79",xlinkHref:"#MJX-1-TEX-N-79",transform:"translate(6035,0)"})]}),e.exports.jsx(s.g,{"data-mml-node":"mo",transform:"translate(6840.8,0)",children:e.exports.jsx(s.use,{"data-c":"3D",xlinkHref:"#MJX-1-TEX-N-3D"})}),e.exports.jsx(s.g,{"data-mml-node":"mo",transform:"translate(7896.6,0)",children:e.exports.jsx(s.use,{"data-c":"28",xlinkHref:"#MJX-1-TEX-N-28"})}),e.exports.jsxs(s.g,{"data-mml-node":"msub",transform:"translate(8285.6,0)",children:[e.exports.jsx(s.g,{"data-mml-node":"mi",children:e.exports.jsx(s.use,{"data-c":"1D43E",xlinkHref:"#MJX-1-TEX-I-1D43E"})}),e.exports.jsx(s.g,{"data-mml-node":"mi",transform:"translate(882,-150) scale(0.707)",children:e.exports.jsx(s.use,{"data-c":"1D44E",xlinkHref:"#MJX-1-TEX-I-1D44E"})})]}),e.exports.jsx(s.g,{"data-mml-node":"mo",transform:"translate(9813.8,0)",children:e.exports.jsx(s.use,{"data-c":"2B",xlinkHref:"#MJX-1-TEX-N-2B"})}),e.exports.jsxs(s.g,{"data-mml-node":"msub",transform:"translate(10814.1,0)",children:[e.exports.jsx(s.g,{"data-mml-node":"mi",children:e.exports.jsx(s.use,{"data-c":"1D43E",xlinkHref:"#MJX-1-TEX-I-1D43E"})}),e.exports.jsx(s.g,{"data-mml-node":"mi",transform:"translate(882,-150) scale(0.707)",children:e.exports.jsx(s.use,{"data-c":"1D451",xlinkHref:"#MJX-1-TEX-I-1D451"})})]}),e.exports.jsx(s.g,{"data-mml-node":"mo",transform:"translate(12336,0)",children:e.exports.jsx(s.use,{"data-c":"2217",xlinkHref:"#MJX-1-TEX-N-2217"})}),e.exports.jsx(s.g,{"data-mml-node":"mo",transform:"translate(13058.2,0)",children:e.exports.jsx(s.use,{"data-c":"28",xlinkHref:"#MJX-1-TEX-N-28"})}),e.exports.jsx(s.g,{"data-mml-node":"mi",transform:"translate(13447.2,0)",children:e.exports.jsx(s.use,{"data-c":"1D45B",xlinkHref:"#MJX-1-TEX-I-1D45B"})}),e.exports.jsx(s.g,{"data-mml-node":"mo",transform:"translate(14269.4,0)",children:e.exports.jsx(s.use,{"data-c":"B7",xlinkHref:"#MJX-1-TEX-N-B7"})}),e.exports.jsx(s.g,{"data-mml-node":"mi",transform:"translate(14769.6,0)",children:e.exports.jsx(s.use,{"data-c":"1D43F",xlinkHref:"#MJX-1-TEX-I-1D43F"})}),e.exports.jsx(s.g,{"data-mml-node":"mo",transform:"translate(15450.6,0)",children:e.exports.jsx(s.use,{"data-c":"29",xlinkHref:"#MJX-1-TEX-N-29"})}),e.exports.jsx(s.g,{"data-mml-node":"mo",transform:"translate(16061.9,0)",children:e.exports.jsx(s.use,{"data-c":"2B",xlinkHref:"#MJX-1-TEX-N-2B"})}),e.exports.jsxs(s.g,{"data-mml-node":"msub",transform:"translate(17062.1,0)",children:[e.exports.jsx(s.g,{"data-mml-node":"mi",children:e.exports.jsx(s.use,{"data-c":"1D43E",xlinkHref:"#MJX-1-TEX-I-1D43E"})}),e.exports.jsx(s.g,{"data-mml-node":"mi",transform:"translate(882,-150) scale(0.707)",children:e.exports.jsx(s.use,{"data-c":"1D460",xlinkHref:"#MJX-1-TEX-I-1D460"})})]}),e.exports.jsx(s.g,{"data-mml-node":"mo",transform:"translate(18325.7,0)",children:e.exports.jsx(s.use,{"data-c":"28",xlinkHref:"#MJX-1-TEX-N-28"})}),e.exports.jsx(s.g,{"data-mml-node":"mi",transform:"translate(18714.7,0)",children:e.exports.jsx(s.use,{"data-c":"1D445",xlinkHref:"#MJX-1-TEX-I-1D445"})}),e.exports.jsx(s.g,{"data-mml-node":"mo",transform:"translate(19695.9,0)",children:e.exports.jsx(s.use,{"data-c":"22C5",xlinkHref:"#MJX-1-TEX-N-22C5"})}),e.exports.jsx(s.g,{"data-mml-node":"mi",transform:"translate(20196.2,0)",children:e.exports.jsx(s.use,{"data-c":"1D438",xlinkHref:"#MJX-1-TEX-I-1D438"})}),e.exports.jsxs(s.g,{"data-mml-node":"msup",transform:"translate(20960.2,0)",children:[e.exports.jsx(s.g,{"data-mml-node":"mo",children:e.exports.jsx(s.use,{"data-c":"29",xlinkHref:"#MJX-1-TEX-N-29"})}),e.exports.jsx(s.g,{"data-mml-node":"mi",transform:"translate(422,413) scale(0.707)",children:e.exports.jsx(s.use,{"data-c":"1D441",xlinkHref:"#MJX-1-TEX-I-1D441"})})]}),e.exports.jsx(s.g,{"data-mml-node":"mo",transform:"translate(22060.1,0)",children:e.exports.jsx(s.use,{"data-c":"29",xlinkHref:"#MJX-1-TEX-N-29"})})]})})]})})}),`
`,e.exports.jsx(s.p,{children:"Note that this is a simplified model compared to the one you implemented in the Ray projects: it doesn't deal with color or attenuation, and it assumes only one point light source."}),`
`,e.exports.jsx(s.h3,{id:"ambient-lighting",children:e.exports.jsx(s.a,{href:"#ambient-lighting",children:"Ambient Lighting"})}),`
`,e.exports.jsx(s.p,{children:"As we are implementing a simple illumination model without explicit object colors, we will use k_a directly as the ambient color contribution."}),`
`,e.exports.jsx(s.div,{className:"task-callout callout",children:e.exports.jsxs(s.ol,{children:[`
`,e.exports.jsxs(s.li,{children:["Declare a uniform float in the fragment shader to hold the ambient coefficient: ",e.exports.jsx(s.code,{children:"ka"})]}),`
`,e.exports.jsxs(s.li,{children:["Pass in ",e.exports.jsx(s.code,{children:"m_ka"})," (a member_variable already declared for you) into the shader from the CPU"]}),`
`,e.exports.jsxs(s.li,{children:["Add a vec3 with components equal to ",e.exports.jsx(s.code,{children:"k_a"})," to the output color."]}),`
`]})}),`
`,e.exports.jsx(t,{images:[{src:"/labs/lab10/ambientExample.png",alt:"TODO"}],figNumber:7,targetWidth:"70%",figCaption:"Expected output after adding the ambient component to the fragment shader"}),`
`,e.exports.jsx(s.h3,{id:"diffuse-lighting",children:e.exports.jsx(s.a,{href:"#diffuse-lighting",children:"Diffuse Lighting"})}),`
`,e.exports.jsx(s.p,{children:"Next, let's add the diffuse component of the illumination model to our shader."}),`
`,e.exports.jsx(t,{images:[{src:"/labs/lab10/diffuse.png",alt:"TODO"}],figNumber:8,targetWidth:"70%",figCaption:"The diffuse component is proportional to the dot product between the normal and the light direction"}),`
`,e.exports.jsxs(s.p,{children:["Diffuse Contribution = ",e.exports.jsx(s.span,{className:"math math-inline",children:e.exports.jsx(s["mjx-container"],{className:"MathJax",jax:"SVG",children:e.exports.jsxs(s.svg,{style:{verticalAlign:"-0.566ex"},xmlns:"http://www.w3.org/2000/svg",width:"9.233ex",height:"2.262ex",role:"img",focusable:"false",viewBox:"0 -750 4081.1 1000",xmlnsXlink:"http://www.w3.org/1999/xlink",children:[e.exports.jsxs(s.defs,{children:[e.exports.jsx(s.path,{id:"MJX-2-TEX-I-1D43E",d:"M285 628Q285 635 228 637Q205 637 198 638T191 647Q191 649 193 661Q199 681 203 682Q205 683 214 683H219Q260 681 355 681Q389 681 418 681T463 682T483 682Q500 682 500 674Q500 669 497 660Q496 658 496 654T495 648T493 644T490 641T486 639T479 638T470 637T456 637Q416 636 405 634T387 623L306 305Q307 305 490 449T678 597Q692 611 692 620Q692 635 667 637Q651 637 651 648Q651 650 654 662T659 677Q662 682 676 682Q680 682 711 681T791 680Q814 680 839 681T869 682Q889 682 889 672Q889 650 881 642Q878 637 862 637Q787 632 726 586Q710 576 656 534T556 455L509 418L518 396Q527 374 546 329T581 244Q656 67 661 61Q663 59 666 57Q680 47 717 46H738Q744 38 744 37T741 19Q737 6 731 0H720Q680 3 625 3Q503 3 488 0H478Q472 6 472 9T474 27Q478 40 480 43T491 46H494Q544 46 544 71Q544 75 517 141T485 216L427 354L359 301L291 248L268 155Q245 63 245 58Q245 51 253 49T303 46H334Q340 37 340 35Q340 19 333 5Q328 0 317 0Q314 0 280 1T180 2Q118 2 85 2T49 1Q31 1 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Z"}),e.exports.jsx(s.path,{id:"MJX-2-TEX-I-1D451",d:"M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"}),e.exports.jsx(s.path,{id:"MJX-2-TEX-N-28",d:"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"}),e.exports.jsx(s.path,{id:"MJX-2-TEX-I-1D45B",d:"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"}),e.exports.jsx(s.path,{id:"MJX-2-TEX-N-22C5",d:"M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250Z"}),e.exports.jsx(s.path,{id:"MJX-2-TEX-I-1D43F",d:"M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 217 683Q271 680 344 680Q485 680 506 683H518Q524 677 524 674T522 656Q517 641 513 637H475Q406 636 394 628Q387 624 380 600T313 336Q297 271 279 198T252 88L243 52Q243 48 252 48T311 46H328Q360 46 379 47T428 54T478 72T522 106T564 161Q580 191 594 228T611 270Q616 273 628 273H641Q647 264 647 262T627 203T583 83T557 9Q555 4 553 3T537 0T494 -1Q483 -1 418 -1T294 0H116Q32 0 32 10Q32 17 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z"}),e.exports.jsx(s.path,{id:"MJX-2-TEX-N-29",d:"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"})]}),e.exports.jsx(s.g,{stroke:"currentColor",fill:"currentColor",strokeWidth:"0",transform:"scale(1,-1)",children:e.exports.jsxs(s.g,{"data-mml-node":"math",children:[e.exports.jsxs(s.g,{"data-mml-node":"msub",children:[e.exports.jsx(s.g,{"data-mml-node":"mi",children:e.exports.jsx(s.use,{"data-c":"1D43E",xlinkHref:"#MJX-2-TEX-I-1D43E"})}),e.exports.jsx(s.g,{"data-mml-node":"mi",transform:"translate(882,-150) scale(0.707)",children:e.exports.jsx(s.use,{"data-c":"1D451",xlinkHref:"#MJX-2-TEX-I-1D451"})})]}),e.exports.jsx(s.g,{"data-mml-node":"mo",transform:"translate(1299.7,0)",children:e.exports.jsx(s.use,{"data-c":"28",xlinkHref:"#MJX-2-TEX-N-28"})}),e.exports.jsx(s.g,{"data-mml-node":"mi",transform:"translate(1688.7,0)",children:e.exports.jsx(s.use,{"data-c":"1D45B",xlinkHref:"#MJX-2-TEX-I-1D45B"})}),e.exports.jsx(s.g,{"data-mml-node":"mo",transform:"translate(2510.9,0)",children:e.exports.jsx(s.use,{"data-c":"22C5",xlinkHref:"#MJX-2-TEX-N-22C5"})}),e.exports.jsx(s.g,{"data-mml-node":"mi",transform:"translate(3011.1,0)",children:e.exports.jsx(s.use,{"data-c":"1D43F",xlinkHref:"#MJX-2-TEX-I-1D43F"})}),e.exports.jsx(s.g,{"data-mml-node":"mo",transform:"translate(3692.1,0)",children:e.exports.jsx(s.use,{"data-c":"29",xlinkHref:"#MJX-2-TEX-N-29"})})]})})]})})})]}),`
`,e.exports.jsxs(s.ul,{children:[`
`,e.exports.jsxs(s.li,{children:[e.exports.jsx(s.span,{className:"math math-inline",children:e.exports.jsx(s["mjx-container"],{className:"MathJax",jax:"SVG",children:e.exports.jsxs(s.svg,{style:{verticalAlign:"-0.355ex"},xmlns:"http://www.w3.org/2000/svg",width:"2.94ex",height:"1.901ex",role:"img",focusable:"false",viewBox:"0 -683 1299.7 840.1",xmlnsXlink:"http://www.w3.org/1999/xlink",children:[e.exports.jsxs(s.defs,{children:[e.exports.jsx(s.path,{id:"MJX-3-TEX-I-1D43E",d:"M285 628Q285 635 228 637Q205 637 198 638T191 647Q191 649 193 661Q199 681 203 682Q205 683 214 683H219Q260 681 355 681Q389 681 418 681T463 682T483 682Q500 682 500 674Q500 669 497 660Q496 658 496 654T495 648T493 644T490 641T486 639T479 638T470 637T456 637Q416 636 405 634T387 623L306 305Q307 305 490 449T678 597Q692 611 692 620Q692 635 667 637Q651 637 651 648Q651 650 654 662T659 677Q662 682 676 682Q680 682 711 681T791 680Q814 680 839 681T869 682Q889 682 889 672Q889 650 881 642Q878 637 862 637Q787 632 726 586Q710 576 656 534T556 455L509 418L518 396Q527 374 546 329T581 244Q656 67 661 61Q663 59 666 57Q680 47 717 46H738Q744 38 744 37T741 19Q737 6 731 0H720Q680 3 625 3Q503 3 488 0H478Q472 6 472 9T474 27Q478 40 480 43T491 46H494Q544 46 544 71Q544 75 517 141T485 216L427 354L359 301L291 248L268 155Q245 63 245 58Q245 51 253 49T303 46H334Q340 37 340 35Q340 19 333 5Q328 0 317 0Q314 0 280 1T180 2Q118 2 85 2T49 1Q31 1 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Z"}),e.exports.jsx(s.path,{id:"MJX-3-TEX-I-1D451",d:"M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"})]}),e.exports.jsx(s.g,{stroke:"currentColor",fill:"currentColor",strokeWidth:"0",transform:"scale(1,-1)",children:e.exports.jsx(s.g,{"data-mml-node":"math",children:e.exports.jsxs(s.g,{"data-mml-node":"msub",children:[e.exports.jsx(s.g,{"data-mml-node":"mi",children:e.exports.jsx(s.use,{"data-c":"1D43E",xlinkHref:"#MJX-3-TEX-I-1D43E"})}),e.exports.jsx(s.g,{"data-mml-node":"mi",transform:"translate(882,-150) scale(0.707)",children:e.exports.jsx(s.use,{"data-c":"1D451",xlinkHref:"#MJX-3-TEX-I-1D451"})})]})})})]})})}),": Diffuse Coefficient"]}),`
`,e.exports.jsxs(s.li,{children:[e.exports.jsx(s.span,{className:"math math-inline",children:e.exports.jsx(s["mjx-container"],{className:"MathJax",jax:"SVG",children:e.exports.jsxs(s.svg,{style:{verticalAlign:"-0.025ex"},xmlns:"http://www.w3.org/2000/svg",width:"1.357ex",height:"1.025ex",role:"img",focusable:"false",viewBox:"0 -442 600 453",xmlnsXlink:"http://www.w3.org/1999/xlink",children:[e.exports.jsx(s.defs,{children:e.exports.jsx(s.path,{id:"MJX-4-TEX-I-1D45B",d:"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"})}),e.exports.jsx(s.g,{stroke:"currentColor",fill:"currentColor",strokeWidth:"0",transform:"scale(1,-1)",children:e.exports.jsx(s.g,{"data-mml-node":"math",children:e.exports.jsx(s.g,{"data-mml-node":"mi",children:e.exports.jsx(s.use,{"data-c":"1D45B",xlinkHref:"#MJX-4-TEX-I-1D45B"})})})})]})})}),": Surface Normal"]}),`
`,e.exports.jsxs(s.li,{children:[e.exports.jsx(s.span,{className:"math math-inline",children:e.exports.jsx(s["mjx-container"],{className:"MathJax",jax:"SVG",children:e.exports.jsxs(s.svg,{style:{verticalAlign:"0"},xmlns:"http://www.w3.org/2000/svg",width:"1.541ex",height:"1.545ex",role:"img",focusable:"false",viewBox:"0 -683 681 683",xmlnsXlink:"http://www.w3.org/1999/xlink",children:[e.exports.jsx(s.defs,{children:e.exports.jsx(s.path,{id:"MJX-5-TEX-I-1D43F",d:"M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 217 683Q271 680 344 680Q485 680 506 683H518Q524 677 524 674T522 656Q517 641 513 637H475Q406 636 394 628Q387 624 380 600T313 336Q297 271 279 198T252 88L243 52Q243 48 252 48T311 46H328Q360 46 379 47T428 54T478 72T522 106T564 161Q580 191 594 228T611 270Q616 273 628 273H641Q647 264 647 262T627 203T583 83T557 9Q555 4 553 3T537 0T494 -1Q483 -1 418 -1T294 0H116Q32 0 32 10Q32 17 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z"})}),e.exports.jsx(s.g,{stroke:"currentColor",fill:"currentColor",strokeWidth:"0",transform:"scale(1,-1)",children:e.exports.jsx(s.g,{"data-mml-node":"math",children:e.exports.jsx(s.g,{"data-mml-node":"mi",children:e.exports.jsx(s.use,{"data-c":"1D43F",xlinkHref:"#MJX-5-TEX-I-1D43F"})})})})]})})}),": Vector to Light"]}),`
`]}),`
`,e.exports.jsx(s.p,{children:`To compute the diffuse and specular components, we need access to the light's position.
We also need to make sure that the light position is in the same coordinate space as the rest of the data we are using. To minimize the amount of compuation done, this conversion is best done once in the CPU.`}),`
`,e.exports.jsxs(s.div,{className:"warning-callout callout",children:[e.exports.jsx(s.p,{children:"When passing a normalized vector from the vertex shader to the fragment shader, the process of rasterization and interpolation can change the length of the vector."}),e.exports.jsx(s.p,{children:e.exports.jsx(s.strong,{children:"It is essential to renormalize vectors in the fragment shader if you expect them to be normalized."})})]}),`
`,e.exports.jsxs(s.div,{className:"task-callout callout",children:[e.exports.jsxs(s.ol,{children:[`
`,e.exports.jsxs(s.li,{children:["Declare a ",e.exports.jsx(s.code,{children:"uniform vec4"})," in the fragment shader to hold the world space light position"]}),`
`,e.exports.jsxs(s.li,{children:["Declare a ",e.exports.jsx(s.code,{children:"uniform vec3"})," in the fragment shader to hold the light color"]}),`
`,e.exports.jsxs(s.li,{children:["Declare a ",e.exports.jsx(s.code,{children:"uniform float"})," in the fragment shader to hold the diffuse coefficient ",e.exports.jsx(s.code,{children:"kd"})]}),`
`,e.exports.jsxs(s.li,{children:["Pass ",e.exports.jsx(s.code,{children:"m_lightPos"})," into the shader inside ",e.exports.jsx(s.code,{children:"paintGl()"})]}),`
`,e.exports.jsxs(s.li,{children:["Pass ",e.exports.jsx(s.code,{children:"m_lightColor"})," into the shader inside ",e.exports.jsx(s.code,{children:"paintGl()"})]}),`
`,e.exports.jsxs(s.li,{children:["Pass ",e.exports.jsx(s.code,{children:"m_kd"})," into the shader inside ",e.exports.jsx(s.code,{children:"paintGl()"})]}),`
`,e.exports.jsx(s.li,{children:'In the fragment shader, calculate the normalized "to-light" direction vector.'}),`
`,e.exports.jsxs(s.li,{children:["In the fragment shader, calculate the diffuse intensity as a float by using the ",e.exports.jsx(s.a,{href:"https://registry.khronos.org/OpenGL-Refpages/gl4/html/dot.xhtml",target:"_blank",rel:"noopener noreferrer",children:"dot"})," function in GLSL. Make sure to ",e.exports.jsx(s.a,{href:"https://registry.khronos.org/OpenGL-Refpages/gl4/html/normalize.xhtml",target:"_blank",rel:"noopener noreferrer",children:"normalize"})," the light and normal vectors before performing this operation!"]}),`
`,e.exports.jsx(s.li,{children:"Add the diffuse intensity to the fragment shader's final color like you did for the ambient term."}),`
`]}),e.exports.jsxs(s.blockquote,{children:[`
`,e.exports.jsx(s.p,{children:"PS: remember to clamp your dot product result to [0,1]."}),`
`]}),e.exports.jsxs(s.blockquote,{children:[`
`,e.exports.jsxs(s.p,{children:["PPS: remember to ",e.exports.jsx(s.strong,{children:"renormalize the normal vector in the fragment shader"})," as the rasterization and interpolation can change the magnitude of the vector."]}),`
`]})]}),`
`,e.exports.jsx(t,{images:[{src:"/labs/lab10/diffuseExample.png",alt:"TODO"}],figNumber:9,targetWidth:"75%",figCaption:"Expected output after adding both the ambient and diffuse components."}),`
`,e.exports.jsx(s.h3,{id:"specular-component",children:e.exports.jsx(s.a,{href:"#specular-component",children:"Specular Component"})}),`
`,e.exports.jsx(s.p,{children:"Finally, let's add the specular component of the illumination model to our fragment shader."}),`
`,e.exports.jsx(t,{images:[{src:"/labs/lab10/specularImage.png",alt:"TODO"}],figNumber:10,targetWidth:"75%",figCaption:"The specular component is proportional to the dot product between the reflection and the eye direction, raised to a power"}),`
`,e.exports.jsxs(s.p,{children:["Specular Contribution = ",e.exports.jsx(s.span,{className:"math math-inline",children:e.exports.jsx(s["mjx-container"],{className:"MathJax",jax:"SVG",children:e.exports.jsxs(s.svg,{style:{verticalAlign:"-0.566ex"},xmlns:"http://www.w3.org/2000/svg",width:"11.308ex",height:"2.48ex",role:"img",focusable:"false",viewBox:"0 -846 4998 1096",xmlnsXlink:"http://www.w3.org/1999/xlink",children:[e.exports.jsxs(s.defs,{children:[e.exports.jsx(s.path,{id:"MJX-6-TEX-I-1D43E",d:"M285 628Q285 635 228 637Q205 637 198 638T191 647Q191 649 193 661Q199 681 203 682Q205 683 214 683H219Q260 681 355 681Q389 681 418 681T463 682T483 682Q500 682 500 674Q500 669 497 660Q496 658 496 654T495 648T493 644T490 641T486 639T479 638T470 637T456 637Q416 636 405 634T387 623L306 305Q307 305 490 449T678 597Q692 611 692 620Q692 635 667 637Q651 637 651 648Q651 650 654 662T659 677Q662 682 676 682Q680 682 711 681T791 680Q814 680 839 681T869 682Q889 682 889 672Q889 650 881 642Q878 637 862 637Q787 632 726 586Q710 576 656 534T556 455L509 418L518 396Q527 374 546 329T581 244Q656 67 661 61Q663 59 666 57Q680 47 717 46H738Q744 38 744 37T741 19Q737 6 731 0H720Q680 3 625 3Q503 3 488 0H478Q472 6 472 9T474 27Q478 40 480 43T491 46H494Q544 46 544 71Q544 75 517 141T485 216L427 354L359 301L291 248L268 155Q245 63 245 58Q245 51 253 49T303 46H334Q340 37 340 35Q340 19 333 5Q328 0 317 0Q314 0 280 1T180 2Q118 2 85 2T49 1Q31 1 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Z"}),e.exports.jsx(s.path,{id:"MJX-6-TEX-I-1D460",d:"M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"}),e.exports.jsx(s.path,{id:"MJX-6-TEX-N-28",d:"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"}),e.exports.jsx(s.path,{id:"MJX-6-TEX-I-1D445",d:"M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z"}),e.exports.jsx(s.path,{id:"MJX-6-TEX-N-22C5",d:"M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250Z"}),e.exports.jsx(s.path,{id:"MJX-6-TEX-I-1D438",d:"M492 213Q472 213 472 226Q472 230 477 250T482 285Q482 316 461 323T364 330H312Q311 328 277 192T243 52Q243 48 254 48T334 46Q428 46 458 48T518 61Q567 77 599 117T670 248Q680 270 683 272Q690 274 698 274Q718 274 718 261Q613 7 608 2Q605 0 322 0H133Q31 0 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H757Q764 676 764 669Q764 664 751 557T737 447Q735 440 717 440H705Q698 445 698 453L701 476Q704 500 704 528Q704 558 697 578T678 609T643 625T596 632T532 634H485Q397 633 392 631Q388 629 386 622Q385 619 355 499T324 377Q347 376 372 376H398Q464 376 489 391T534 472Q538 488 540 490T557 493Q562 493 565 493T570 492T572 491T574 487T577 483L544 351Q511 218 508 216Q505 213 492 213Z"}),e.exports.jsx(s.path,{id:"MJX-6-TEX-N-29",d:"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"}),e.exports.jsx(s.path,{id:"MJX-6-TEX-I-1D441",d:"M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z"})]}),e.exports.jsx(s.g,{stroke:"currentColor",fill:"currentColor",strokeWidth:"0",transform:"scale(1,-1)",children:e.exports.jsxs(s.g,{"data-mml-node":"math",children:[e.exports.jsxs(s.g,{"data-mml-node":"msub",children:[e.exports.jsx(s.g,{"data-mml-node":"mi",children:e.exports.jsx(s.use,{"data-c":"1D43E",xlinkHref:"#MJX-6-TEX-I-1D43E"})}),e.exports.jsx(s.g,{"data-mml-node":"mi",transform:"translate(882,-150) scale(0.707)",children:e.exports.jsx(s.use,{"data-c":"1D460",xlinkHref:"#MJX-6-TEX-I-1D460"})})]}),e.exports.jsx(s.g,{"data-mml-node":"mo",transform:"translate(1263.6,0)",children:e.exports.jsx(s.use,{"data-c":"28",xlinkHref:"#MJX-6-TEX-N-28"})}),e.exports.jsx(s.g,{"data-mml-node":"mi",transform:"translate(1652.6,0)",children:e.exports.jsx(s.use,{"data-c":"1D445",xlinkHref:"#MJX-6-TEX-I-1D445"})}),e.exports.jsx(s.g,{"data-mml-node":"mo",transform:"translate(2633.9,0)",children:e.exports.jsx(s.use,{"data-c":"22C5",xlinkHref:"#MJX-6-TEX-N-22C5"})}),e.exports.jsx(s.g,{"data-mml-node":"mi",transform:"translate(3134.1,0)",children:e.exports.jsx(s.use,{"data-c":"1D438",xlinkHref:"#MJX-6-TEX-I-1D438"})}),e.exports.jsxs(s.g,{"data-mml-node":"msup",transform:"translate(3898.1,0)",children:[e.exports.jsx(s.g,{"data-mml-node":"mo",children:e.exports.jsx(s.use,{"data-c":"29",xlinkHref:"#MJX-6-TEX-N-29"})}),e.exports.jsx(s.g,{"data-mml-node":"mi",transform:"translate(422,363) scale(0.707)",children:e.exports.jsx(s.use,{"data-c":"1D441",xlinkHref:"#MJX-6-TEX-I-1D441"})})]})]})})]})})})]}),`
`,e.exports.jsxs(s.ul,{children:[`
`,e.exports.jsxs(s.li,{children:[e.exports.jsx(s.span,{className:"math math-inline",children:e.exports.jsx(s["mjx-container"],{className:"MathJax",jax:"SVG",children:e.exports.jsxs(s.svg,{style:{verticalAlign:"-0.355ex"},xmlns:"http://www.w3.org/2000/svg",width:"2.859ex",height:"1.901ex",role:"img",focusable:"false",viewBox:"0 -683 1263.6 840.1",xmlnsXlink:"http://www.w3.org/1999/xlink",children:[e.exports.jsxs(s.defs,{children:[e.exports.jsx(s.path,{id:"MJX-7-TEX-I-1D43E",d:"M285 628Q285 635 228 637Q205 637 198 638T191 647Q191 649 193 661Q199 681 203 682Q205 683 214 683H219Q260 681 355 681Q389 681 418 681T463 682T483 682Q500 682 500 674Q500 669 497 660Q496 658 496 654T495 648T493 644T490 641T486 639T479 638T470 637T456 637Q416 636 405 634T387 623L306 305Q307 305 490 449T678 597Q692 611 692 620Q692 635 667 637Q651 637 651 648Q651 650 654 662T659 677Q662 682 676 682Q680 682 711 681T791 680Q814 680 839 681T869 682Q889 682 889 672Q889 650 881 642Q878 637 862 637Q787 632 726 586Q710 576 656 534T556 455L509 418L518 396Q527 374 546 329T581 244Q656 67 661 61Q663 59 666 57Q680 47 717 46H738Q744 38 744 37T741 19Q737 6 731 0H720Q680 3 625 3Q503 3 488 0H478Q472 6 472 9T474 27Q478 40 480 43T491 46H494Q544 46 544 71Q544 75 517 141T485 216L427 354L359 301L291 248L268 155Q245 63 245 58Q245 51 253 49T303 46H334Q340 37 340 35Q340 19 333 5Q328 0 317 0Q314 0 280 1T180 2Q118 2 85 2T49 1Q31 1 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Z"}),e.exports.jsx(s.path,{id:"MJX-7-TEX-I-1D460",d:"M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"})]}),e.exports.jsx(s.g,{stroke:"currentColor",fill:"currentColor",strokeWidth:"0",transform:"scale(1,-1)",children:e.exports.jsx(s.g,{"data-mml-node":"math",children:e.exports.jsxs(s.g,{"data-mml-node":"msub",children:[e.exports.jsx(s.g,{"data-mml-node":"mi",children:e.exports.jsx(s.use,{"data-c":"1D43E",xlinkHref:"#MJX-7-TEX-I-1D43E"})}),e.exports.jsx(s.g,{"data-mml-node":"mi",transform:"translate(882,-150) scale(0.707)",children:e.exports.jsx(s.use,{"data-c":"1D460",xlinkHref:"#MJX-7-TEX-I-1D460"})})]})})})]})})}),": Specular Coefficient"]}),`
`,e.exports.jsxs(s.li,{children:[e.exports.jsx(s.span,{className:"math math-inline",children:e.exports.jsx(s["mjx-container"],{className:"MathJax",jax:"SVG",children:e.exports.jsxs(s.svg,{style:{verticalAlign:"-0.048ex"},xmlns:"http://www.w3.org/2000/svg",width:"1.717ex",height:"1.593ex",role:"img",focusable:"false",viewBox:"0 -683 759 704",xmlnsXlink:"http://www.w3.org/1999/xlink",children:[e.exports.jsx(s.defs,{children:e.exports.jsx(s.path,{id:"MJX-8-TEX-I-1D445",d:"M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z"})}),e.exports.jsx(s.g,{stroke:"currentColor",fill:"currentColor",strokeWidth:"0",transform:"scale(1,-1)",children:e.exports.jsx(s.g,{"data-mml-node":"math",children:e.exports.jsx(s.g,{"data-mml-node":"mi",children:e.exports.jsx(s.use,{"data-c":"1D445",xlinkHref:"#MJX-8-TEX-I-1D445"})})})})]})})}),": Reflected Light Vector"]}),`
`,e.exports.jsxs(s.li,{children:[e.exports.jsx(s.span,{className:"math math-inline",children:e.exports.jsx(s["mjx-container"],{className:"MathJax",jax:"SVG",children:e.exports.jsxs(s.svg,{style:{verticalAlign:"0"},xmlns:"http://www.w3.org/2000/svg",width:"1.729ex",height:"1.538ex",role:"img",focusable:"false",viewBox:"0 -680 764 680",xmlnsXlink:"http://www.w3.org/1999/xlink",children:[e.exports.jsx(s.defs,{children:e.exports.jsx(s.path,{id:"MJX-9-TEX-I-1D438",d:"M492 213Q472 213 472 226Q472 230 477 250T482 285Q482 316 461 323T364 330H312Q311 328 277 192T243 52Q243 48 254 48T334 46Q428 46 458 48T518 61Q567 77 599 117T670 248Q680 270 683 272Q690 274 698 274Q718 274 718 261Q613 7 608 2Q605 0 322 0H133Q31 0 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H757Q764 676 764 669Q764 664 751 557T737 447Q735 440 717 440H705Q698 445 698 453L701 476Q704 500 704 528Q704 558 697 578T678 609T643 625T596 632T532 634H485Q397 633 392 631Q388 629 386 622Q385 619 355 499T324 377Q347 376 372 376H398Q464 376 489 391T534 472Q538 488 540 490T557 493Q562 493 565 493T570 492T572 491T574 487T577 483L544 351Q511 218 508 216Q505 213 492 213Z"})}),e.exports.jsx(s.g,{stroke:"currentColor",fill:"currentColor",strokeWidth:"0",transform:"scale(1,-1)",children:e.exports.jsx(s.g,{"data-mml-node":"math",children:e.exports.jsx(s.g,{"data-mml-node":"mi",children:e.exports.jsx(s.use,{"data-c":"1D438",xlinkHref:"#MJX-9-TEX-I-1D438"})})})})]})})}),": Vector to Camera"]}),`
`,e.exports.jsxs(s.li,{children:[e.exports.jsx(s.span,{className:"math math-inline",children:e.exports.jsx(s["mjx-container"],{className:"MathJax",jax:"SVG",children:e.exports.jsxs(s.svg,{style:{verticalAlign:"0"},xmlns:"http://www.w3.org/2000/svg",width:"2.009ex",height:"1.545ex",role:"img",focusable:"false",viewBox:"0 -683 888 683",xmlnsXlink:"http://www.w3.org/1999/xlink",children:[e.exports.jsx(s.defs,{children:e.exports.jsx(s.path,{id:"MJX-10-TEX-I-1D441",d:"M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z"})}),e.exports.jsx(s.g,{stroke:"currentColor",fill:"currentColor",strokeWidth:"0",transform:"scale(1,-1)",children:e.exports.jsx(s.g,{"data-mml-node":"math",children:e.exports.jsx(s.g,{"data-mml-node":"mi",children:e.exports.jsx(s.use,{"data-c":"1D441",xlinkHref:"#MJX-10-TEX-I-1D441"})})})})]})})}),": Specular Exponent"]}),`
`]}),`
`,e.exports.jsxs(s.div,{className:"task-callout callout",children:[e.exports.jsxs(s.ol,{start:"3",children:[`
`,e.exports.jsxs(s.li,{children:["Declare a ",e.exports.jsx(s.code,{children:"uniform float"})," in the fragment shader to hold the specular coefficient ",e.exports.jsx(s.code,{children:"ks"})]}),`
`,e.exports.jsxs(s.li,{children:["Declare a ",e.exports.jsx(s.code,{children:"uniform float"})," in the fragment shader to hold the shininiess."]}),`
`,e.exports.jsxs(s.li,{children:["Declare a ",e.exports.jsx(s.code,{children:"uniform vec4"})," in the fragment shader to hold the camera position in world space."]}),`
`,e.exports.jsxs(s.li,{children:["Pass ",e.exports.jsx(s.code,{children:"shininess"})," (once again a member variable) into the shader inside ",e.exports.jsx(s.code,{children:"paintGl()"})]}),`
`,e.exports.jsxs(s.li,{children:["Pass ",e.exports.jsx(s.code,{children:"m_ks"})," into the shader inside ",e.exports.jsx(s.code,{children:"paintGl()"})]}),`
`,e.exports.jsxs(s.li,{children:["Calculate and pass the world space camera position into the shader inside ",e.exports.jsx(s.code,{children:"paintGl()"})," using the inverse view matrix."]}),`
`,e.exports.jsxs(s.li,{children:["Calculate the reflected light vector R in the fragment shader usin the ",e.exports.jsx(s.a,{href:"https://registry.khronos.org/OpenGL-Refpages/gl4/html/reflect.xhtml",target:"_blank",rel:"noopener noreferrer",children:"reflect"})," function."]}),`
`,e.exports.jsx(s.li,{children:"Calculate the camera vector E by using the fragment position in camera space. Hint: what is the camera's position in camera space?"}),`
`,e.exports.jsxs(s.li,{children:["Calculate the specular intensity using ",e.exports.jsx(s.a,{href:"https://registry.khronos.org/OpenGL-Refpages/gl4/html/dot.xhtml",target:"_blank",rel:"noopener noreferrer",children:"dot"})," and our two vectors we calculated as well as the GLSL exponential function ",e.exports.jsx(s.a,{href:"https://registry.khronos.org/OpenGL-Refpages/gl4/html/pow.xhtml",target:"_blank",rel:"noopener noreferrer",children:"pow"}),"."]}),`
`,e.exports.jsx(s.li,{children:"Add the specular intensity to the output color"}),`
`]}),e.exports.jsxs(s.p,{children:["PS: remember to clamp your dot product result to ",e.exports.jsx(s.code,{children:"[0,1]"}),"."]}),e.exports.jsx(s.p,{children:"PPS: remember to also re-normalize the normal vector in the fragment shader, as interpolation can change the magnitude of the vector."})]}),`
`,e.exports.jsx(s.h2,{id:"end",children:e.exports.jsx(s.a,{href:"#end",children:"End"})}),`
`,e.exports.jsx(s.p,{children:"Congrats on finishing the Shaders lab!"}),`
`,e.exports.jsx(t,{images:[{src:"/labs/lab10/phongExamplesquare.png",alt:"TODO"}],figNumber:11,targetWidth:"70%",figCaption:"Final expected output, using a shininess value of 15"}),`
`,e.exports.jsx(s.p,{children:"Once your output looks like the example above, it's time to submit your code and get checked off by a TA."}),`
`,e.exports.jsx(s.h2,{id:"submission",children:e.exports.jsx(s.a,{href:"#submission",children:"Submission"})}),`
`,e.exports.jsx(s.p,{children:'Submit your Github repo for this lab to the "Lab 10: Shaders" assignment on Gradescope, then get checked off by a TA during lab hours.'}),`
`,e.exports.jsx(n,{}),e.exports.jsx(s.style,{children:`
mjx-container[jax="SVG"] {
  direction: ltr;
}

mjx-container[jax="SVG"] > svg {
  overflow: visible;
  min-height: 1px;
  min-width: 1px;
}

mjx-container[jax="SVG"] > svg a {
  fill: blue;
  stroke: blue;
}

mjx-container[jax="SVG"][display="true"] {
  display: block;
  text-align: center;
  margin: 1em 0;
}

mjx-container[jax="SVG"][display="true"][width="full"] {
  display: flex;
}

mjx-container[jax="SVG"][justify="left"] {
  text-align: left;
}

mjx-container[jax="SVG"][justify="right"] {
  text-align: right;
}

g[data-mml-node="merror"] > g {
  fill: red;
  stroke: red;
}

g[data-mml-node="merror"] > rect[data-background] {
  fill: yellow;
  stroke: none;
}

g[data-mml-node="mtable"] > line[data-line], svg[data-table] > g > line[data-line] {
  stroke-width: 70px;
  fill: none;
}

g[data-mml-node="mtable"] > rect[data-frame], svg[data-table] > g > rect[data-frame] {
  stroke-width: 70px;
  fill: none;
}

g[data-mml-node="mtable"] > .mjx-dashed, svg[data-table] > g > .mjx-dashed {
  stroke-dasharray: 140;
}

g[data-mml-node="mtable"] > .mjx-dotted, svg[data-table] > g > .mjx-dotted {
  stroke-linecap: round;
  stroke-dasharray: 0,140;
}

g[data-mml-node="mtable"] > g > svg {
  overflow: visible;
}

[jax="SVG"] mjx-tool {
  display: inline-block;
  position: relative;
  width: 0;
  height: 0;
}

[jax="SVG"] mjx-tool > mjx-tip {
  position: absolute;
  top: 0;
  left: 0;
}

mjx-tool > mjx-tip {
  display: inline-block;
  padding: .2em;
  border: 1px solid #888;
  font-size: 70%;
  background-color: #F8F8F8;
  color: black;
  box-shadow: 2px 2px 5px #AAAAAA;
}

g[data-mml-node="maction"][data-toggle] {
  cursor: pointer;
}

mjx-status {
  display: block;
  position: fixed;
  left: 1em;
  bottom: 1em;
  min-width: 25%;
  padding: .2em .4em;
  border: 1px solid #888;
  font-size: 90%;
  background-color: #F8F8F8;
  color: black;
}

foreignObject[data-mjx-xml] {
  font-family: initial;
  line-height: normal;
  overflow: visible;
}

mjx-container[jax="SVG"] path[data-c], mjx-container[jax="SVG"] use[data-c] {
  stroke-width: 3;
}
`})]})]})}function x(r={}){const{wrapper:s}=r.components||{};return s?e.exports.jsx(s,Object.assign({},r,{children:e.exports.jsx(o,r)})):o(r)}export{x as default,d as documentProps};
